C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 1   


C51 COMPILER V8.04b, COMPILATION OF MODULE CAN
OBJECT MODULE PLACED IN CAN.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE CAN.C LARGE OBJECTADVANCED OPTIMIZE(9,SPEED) BROWSE ORDER DEFINE(SLAVE_BOAR
                    -DS,PRINT_ERROR,PRINT_WARNING,PRINT,PANASONIC_12_CELLS) DEBUG

line level    source

   1          //****************************************************************************
   2          // @Module        MultiCAN Controller 
   3          // @Filename      CAN.C
   4          // @Project       BM_NewSlave.dav
   5          //----------------------------------------------------------------------------
   6          // @Controller    Infineon XC886CLM-8FF
   7          //
   8          // @Compiler      Keil
   9          //
  10          // @Codegenerator 1.6
  11          //
  12          // @Description:  This file contains functions that use the CAN module.
  13          //
  14          //----------------------------------------------------------------------------
  15          // @Date          12.08.2009 19:23:27
  16          //
  17          //****************************************************************************
  18          
  19          // USER CODE BEGIN (CAN_General,1)
  20          
  21          // USER CODE END
  22          
  23          
  24          
  25          //****************************************************************************
  26          // @Project Includes
  27          //****************************************************************************
  28          
  29          #include "MAIN.H"
  30          
  31          // USER CODE BEGIN (CAN_General,2)
  32          
  33          // USER CODE END
  34          
  35          
  36          //****************************************************************************
  37          // @Macros
  38          //****************************************************************************
  39          
  40          
  41          // USER CODE BEGIN (CAN_General,3)
  42          
  43          // USER CODE END
  44          
  45          
  46          //****************************************************************************
  47          // @Defines
  48          //****************************************************************************
  49          
  50          // USER CODE BEGIN (CAN_General,4)
  51          
  52          // USER CODE END
  53          
  54          
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 2   

  55          //****************************************************************************
  56          // @Typedefs
  57          //****************************************************************************
  58          
  59          // USER CODE BEGIN (CAN_General,5)
  60          
  61          // USER CODE END
  62          
  63          
  64          //****************************************************************************
  65          // @Imported Global Variables
  66          //****************************************************************************
  67          
  68          // USER CODE BEGIN (CAN_General,6)
  69          
  70          // USER CODE END
  71          
  72          
  73          //****************************************************************************
  74          // @Global Variables
  75          //****************************************************************************
  76          
  77          
  78          // USER CODE BEGIN (CAN_General,7)
  79          
  80          // USER CODE END
  81          
  82          
  83          //****************************************************************************
  84          // @External Prototypes
  85          //****************************************************************************
  86          
  87          // USER CODE BEGIN (CAN_General,8)
  88          
  89          // USER CODE END
  90          
  91          
  92          //****************************************************************************
  93          // @Prototypes Of Local Functions
  94          //****************************************************************************
  95          
  96          // USER CODE BEGIN (CAN_General,9)
  97          
  98          // USER CODE END
  99          
 100          
 101          //****************************************************************************
 102          // @Function      void CAN_vInit(void) 
 103          //
 104          //----------------------------------------------------------------------------
 105          // @Description   This is the initialization function of the CAN function 
 106          //                library. It is assumed that the SFRs used by this library 
 107          //                are in their reset state. 
 108          //
 109          //----------------------------------------------------------------------------
 110          // @Returnvalue   None
 111          //
 112          //----------------------------------------------------------------------------
 113          // @Parameters    None
 114          //
 115          //----------------------------------------------------------------------------
 116          // @Date          12.08.2009
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 3   

 117          //
 118          //****************************************************************************
 119          
 120          // USER CODE BEGIN (Init,1)
 121          
 122          // USER CODE END
 123          
 124          void CAN_vInit(void)
 125          {
 126   1      
 127   1        // USER CODE BEGIN (Init,2)
 128   1      
 129   1        // USER CODE END
 130   1      
 131   1        ///  -----------------------------------------------------------------------
 132   1        ///  Configuration of the Module Clock:
 133   1        ///  -----------------------------------------------------------------------
 134   1        ///  - the CAN module clock = 48,00 MHz
 135   1        ///  - FCLK runs at 2 times the frequency of PCLK.
 136   1      
 137   1        ///  - CMCON - Clock Control Register is Configured in MAIN_vInit
 138   1      
 139   1        //   - wait until Panel has finished the initialisation
 140   1          CAN_vWriteCANAddress(CAN_PANCTR); // Addressing CAN_PANCTR
 141   1          CAN_DATA1 = CAN_PANCTR_BUSY;
 142   1          while(CAN_DATA1 & CAN_PANCTR_BUSY){ // wait until Panel has finished the 
 143   2                                              // initialisation
 144   2            CAN_ADCON &= ~0x01;       
 145   2            }                         
 146   1      
 147   1        ///  -----------------------------------------------------------------------
 148   1        ///  Configuration of CAN Node 0:
 149   1        ///  -----------------------------------------------------------------------
 150   1      
 151   1        ///  General Configuration of the Node 0:
 152   1        ///  - set INIT and CCE
 153   1      
 154   1        //-----------CAN_NCR0 = 0x00000041-------------------------------------
 155   1      
 156   1          CAN_vWriteCANAddress(CAN_NCR0); // Addressing CAN_NCR0
 157   1          CAN_DATA0 = 0x41;            // load NODE 0 control register[7-0]
 158   1          CAN_vWriteEN(D0_VALID+ADR_INC); // Data0 is Valid for transmission and 
 159   1                                          // Write is EnabledCAN Address pointing 
 160   1                                          // to the CAN_NSR0.
 161   1      
 162   1        ///  -----------------------------------------------------------------------
 163   1        ///  Configuration of CAN Node 1:
 164   1        ///  -----------------------------------------------------------------------
 165   1      
 166   1        ///  General Configuration of the Node 1:
 167   1        ///  - set INIT and CCE
 168   1      
 169   1        //-----------CAN_NCR1 = 0x00000041-------------------------------------
 170   1      
 171   1          CAN_vWriteCANAddress(CAN_NCR1); // Addressing CAN_NCR1
 172   1          CAN_DATA0 = 0x41;            // load NODE 1 control register[7-0]
 173   1          CAN_vWriteEN(D0_VALID+ADR_INC); // Data0 is Valid for transmission and 
 174   1                                          // Write is EnabledCAN Address pointing 
 175   1                                          // to the CAN_NSR1.
 176   1      
 177   1        //  CAN Address pointing to the CAN_NIPR1
 178   1          CAN_ADCON = ADR_INC;         // Auto Increment the current address(+1)
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 4   

 179   1      
 180   1        ///  - load NODE 1 interrupt pointer register
 181   1        //-----------CAN_NIPR1 = 0x00006000-------------------------------------
 182   1      
 183   1          CAN_DATA0 = 0x00;            // load NIPR1_LECINP, NIPR1_ALINP
 184   1          CAN_DATA1 = 0x60;            // load NIPR1_CFCINP, NIPR1_TRINP
 185   1          CAN_vWriteEN(D0_VALID+D1_VALID+ADR_INC); // Data0 and Data1 are Valid for 
 186   1                                                   // with Auto Increment 
 187   1                                                   // transmission and Write is 
 188   1                                                   // Enabled CAN Address pointing 
 189   1                                                   // to the CAN_NPCR1
 190   1      
 191   1        ///  -----------------------------------------------------------------------
 192   1        ///  Configuration of the used CAN Input Port Pins:
 193   1        ///  -----------------------------------------------------------------------
 194   1        ///  - Pin P3.2 is used as RXDC1_1 input
 195   1      
 196   1        //-----------CAN_NPCR1 = 0x00000001-------------------------------------
 197   1        ///  - Loop-back mode is disabled
 198   1      
 199   1          CAN_DATA0 = 0x01;            // Receive Select NPCR1_RXSEL
 200   1          CAN_DATA1 = 0x00;            // Loop-back mode is disabled
 201   1          CAN_vWriteEN(D0_VALID+D1_VALID+ADR_INC);  //  Data0 & 1 are Valid for 
 202   1                                                    // transmission and Write is 
 203   1                                                    // Enabled with AutoIncrement 
 204   1                                                    // CAN Address pointing to the 
 205   1                                                    // CAN_NBTR1
 206   1      
 207   1      
 208   1      
 209   1        ///  Configuration of the Node 1 Baud Rate:
 210   1        ///  - required baud rate = 250,000 kbaud
 211   1        ///  - real baud rate     = 250,000 kbaud
 212   1        ///  - sample point       = 50,00 %
 213   1        ///  - there are 5 time quanta before sample point
 214   1        ///  - there are 6 time quanta after sample point
 215   1        ///  - the (re)synchronization jump width is 2 time quanta
 216   1        ///  - enable the module clock divider (by 8)
 217   1      
 218   1        //-----------CAN_NBTR1 = 0x0000D441-------------------------------------
 219   1      
 220   1          CAN_DATA0 = 0x41;            // load NBTR1_SJW, BRP
 221   1          CAN_DATA1 = 0xD4;            // load NBTR1_DIV8, TSEG2, TSEG1
 222   1          CAN_vWriteEN(D0_VALID+D1_VALID+ADR_INC);  // Data0, 1 are valid for 
 223   1                                                    // transmission and Write is 
 224   1                                                    // Enabled with Auto 
 225   1                                                    // Increment(+1) CAN Address 
 226   1                                                    // pointing to the CAN_NECNT1
 227   1      
 228   1        ///  Configuration of the Node 1 Error Counter:
 229   1        ///  - the error warning threshold value (warning level) is 96
 230   1      
 231   1        //-----------CAN_NECNT1 = 0x00600000-------------------------------------
 232   1      
 233   1          CAN_DATA2 = 0x60;            // load NECNT1_EWRNLVL register
 234   1          CAN_vWriteEN(D2_VALID+ADR_INC); // Data2 is Valid for transmission, Auto 
 235   1                                          // Increment current address(+1) and 
 236   1                                          // Write is Enabled CAN Address pointing 
 237   1                                          // to the CAN_NFCR1
 238   1      
 239   1        ///  Configuration of the Frame Counter:
 240   1        ///  - Frame Counter Mode: the counter is incremented upon the reception 
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 5   

 241   1        ///    and transmission of frames
 242   1        ///  - frame counter: 0x0000
 243   1      
 244   1      
 245   1        //-----------CAN_NFCR1 = 0x00000000-------------------------------------
 246   1      
 247   1          CAN_DATA0 = 0x00;            // load NFCR1_CFCL
 248   1          CAN_DATA1 = 0x00;            // load NFCR1_CFCH
 249   1          CAN_DATA2 = 0x00;            // load NFCR1_CFCOV, CFCIE, CFMOD, CFSEL
 250   1          CAN_vWriteEN(D0_VALID+D1_VALID+D2_VALID); // Data0, 1, 2 are valid for 
 251   1                                                    // transmission and Write is 
 252   1                                                    // Enabled
 253   1      
 254   1        ///  -----------------------------------------------------------------------
 255   1        ///  Configuration of the used CAN Output Port Pins:
 256   1        ///  -----------------------------------------------------------------------
 257   1        ///  - NODE0 TXD Pin's are not used
 258   1        ///  Pin P3.3 is used as TXDC1_1 Output 
 259   1      
 260   1          SFR_PAGE(_pp2, noSST);       // switch to page 2
 261   1            P3_ALTSEL0      |= 0x08;    //  set AltSel0 
 262   1            P3_ALTSEL1      |= 0x08;    //  set AltSel1
 263   1      
 264   1          SFR_PAGE(_pp0, noSST);       // switch to page 0
 265   1            P3_DIR          |= 0x08;        //  set Direction as Output
 266   1      
 267   1      
 268   1        ///  -----------------------------------------------------------------------
 269   1        ///  Configuration of the CAN Message Object List Structure:
 270   1        ///  -----------------------------------------------------------------------
 271   1      
 272   1          CAN_vWriteCANAddress(CAN_PANCTR); // Addressing CAN_PANCTR
 273   1      
 274   1        ///  Allocate MOs for list 2:
 275   1          CAN_vSetListCommand(0x02000002);  // MO0 for list 2
 276   1          CAN_vSetListCommand(0x02010002);  // MO1 for list 2
 277   1          CAN_vSetListCommand(0x02020002);  // MO2 for list 2
 278   1          CAN_vSetListCommand(0x02030002);  // MO3 for list 2
 279   1          CAN_vSetListCommand(0x02040002);  // MO4 for list 2
 280   1          CAN_vSetListCommand(0x02050002);  // MO5 for list 2
 281   1          CAN_vSetListCommand(0x02100002);  // MO16 for list 2
 282   1          CAN_vSetListCommand(0x02110002);  // MO17 for list 2
 283   1          CAN_vSetListCommand(0x02120002);  // MO18 for list 2
 284   1          CAN_vSetListCommand(0x02130002);  // MO19 for list 2
 285   1          CAN_vSetListCommand(0x02140002);  // MO20 for list 2
 286   1          CAN_vSetListCommand(0x02150002);  // MO21 for list 2
 287   1          CAN_vSetListCommand(0x02160002);  // MO22 for list 2
 288   1          CAN_vSetListCommand(0x02170002);  // MO23 for list 2
 289   1          CAN_vSetListCommand(0x02180002);  // MO24 for list 2
 290   1          CAN_vSetListCommand(0x02190002);  // MO25 for list 2
 291   1          CAN_vSetListCommand(0x021A0002);  // MO26 for list 2
 292   1          CAN_vSetListCommand(0x021B0002);  // MO27 for list 2
 293   1          CAN_vSetListCommand(0x021C0002);  // MO28 for list 2
 294   1          CAN_vSetListCommand(0x021D0002);  // MO29 for list 2
 295   1          CAN_vSetListCommand(0x021E0002);  // MO30 for list 2
 296   1          CAN_vSetListCommand(0x021F0002);  // MO31 for list 2
 297   1      
 298   1        ///  -----------------------------------------------------------------------
 299   1        ///  Configuration of the CAN Message Objects 0 - 31:
 300   1        ///  -----------------------------------------------------------------------
 301   1        ///  -----------------------------------------------------------------------
 302   1        ///  Configuration of Message Object 0:
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 6   

 303   1        ///  -----------------------------------------------------------------------
 304   1        ///  - message object 0 is valid
 305   1        ///  - message object is used as transmit object
 306   1        ///  - this message object is assigned to list 2 (node 1)
 307   1      
 308   1        //--------------MOCTR0 = 0x0EA80000---------------------------------------
 309   1      
 310   1          CAN_vWriteCANAddress(CAN_MOCTR0); // Addressing MO0 control register
 311   1      
 312   1          CAN_vWriteAMData(0x0EA80000); // load MO0 control register
 313   1      
 314   1        //  CAN Address pointing to the CAN_MOAR0
 315   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 316   1      
 317   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
 318   1        ///    order (like class 1)
 319   1        ///  - standard 11-bit identifier
 320   1        ///  - identifier 11-bit:      0x648
 321   1      
 322   1        //--------------MOAR0 = 0xD9200000---------------------------------------
 323   1      
 324   1          CAN_vWriteAMData(0xD9200000); // load MO0 arbitration register
 325   1      
 326   1        //  CAN Address pointing to the CAN_MODATAH0
 327   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 328   1      
 329   1      
 330   1        //--------------MODATAH0 = 0x00000000---------------------------------------
 331   1      
 332   1          CAN_vWriteAMData(0x00000000); // load MO0 data register high
 333   1      
 334   1        //  CAN Address pointing to the CAN_MODATAL0
 335   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 336   1      
 337   1        //--------------MODATAL0 = 0x00000000---------------------------------------
 338   1      
 339   1          CAN_vWriteAMData(0x00000000); // load MO0 data register low
 340   1      
 341   1        //  CAN Address pointing to the CAN_MOAMR0
 342   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 343   1      
 344   1        ///  - only accept receive frames with matching IDE bit
 345   1        ///  - acceptance mask 11-bit: 0x7FF
 346   1      
 347   1        //--------------CAN_MOAMR0 = 0x3FFFFFFF------------------------------------
 348   1      
 349   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO0 acceptance mask register
 350   1      
 351   1        //  CAN Address pointing to the CAN_MOIPR0
 352   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 353   1      
 354   1        ///  - use message pending register 0 bit position 0
 355   1      
 356   1        //--------------MOIPR0 = 0x00000004---------------------------------------
 357   1      
 358   1          CAN_vWriteAMData(0x00000004); // load MO0 interrupt pointer register
 359   1      
 360   1        //  CAN Address pointing to the CAN_MOFGPR0
 361   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 362   1      
 363   1      
 364   1        //--------------MOFGPR0 = 0x00000000---------------------------------------
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 7   

 365   1      
 366   1          CAN_vWriteAMData(0x00000000); // load MO0 FIFO/gateway pointer register
 367   1      
 368   1        //  CAN Address pointing to the CAN_MOFCR0
 369   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 370   1      
 371   1        ///  - this object is a STANDARD MESSAGE OBJECT
 372   1        ///  - 8 valid data bytes
 373   1      
 374   1        //--------------MOFCR0 = 0x08000000---------------------------------------
 375   1      
 376   1          CAN_vWriteAMData(0x08000000); // load MO0  function control register
 377   1      
 378   1        ///  -----------------------------------------------------------------------
 379   1        ///  Configuration of Message Object 1:
 380   1        ///  -----------------------------------------------------------------------
 381   1        ///  - message object 1 is valid
 382   1        ///  - message object is used as transmit object
 383   1        ///  - this message object is assigned to list 2 (node 1)
 384   1      
 385   1        //--------------MOCTR1 = 0x0EA80000---------------------------------------
 386   1      
 387   1          CAN_vWriteCANAddress(CAN_MOCTR1); // Addressing MO1 control register
 388   1      
 389   1          CAN_vWriteAMData(0x0EA80000); // load MO1 control register
 390   1      
 391   1        //  CAN Address pointing to the CAN_MOAR1
 392   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 393   1      
 394   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
 395   1        ///    order (like class 1)
 396   1        ///  - standard 11-bit identifier
 397   1        ///  - identifier 11-bit:      0x649
 398   1      
 399   1        //--------------MOAR1 = 0xD9240000---------------------------------------
 400   1      
 401   1          CAN_vWriteAMData(0xD9240000); // load MO1 arbitration register
 402   1      
 403   1        //  CAN Address pointing to the CAN_MODATAH1
 404   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 405   1      
 406   1      
 407   1        //--------------MODATAH1 = 0x00000000---------------------------------------
 408   1      
 409   1          CAN_vWriteAMData(0x00000000); // load MO1 data register high
 410   1      
 411   1        //  CAN Address pointing to the CAN_MODATAL1
 412   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 413   1      
 414   1        //--------------MODATAL1 = 0x00000000---------------------------------------
 415   1      
 416   1          CAN_vWriteAMData(0x00000000); // load MO1 data register low
 417   1      
 418   1        //  CAN Address pointing to the CAN_MOAMR1
 419   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 420   1      
 421   1        ///  - only accept receive frames with matching IDE bit
 422   1        ///  - acceptance mask 11-bit: 0x7FF
 423   1      
 424   1        //--------------CAN_MOAMR1 = 0x3FFFFFFF------------------------------------
 425   1      
 426   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO1 acceptance mask register
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 8   

 427   1      
 428   1        //  CAN Address pointing to the CAN_MOIPR1
 429   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 430   1      
 431   1        ///  - use message pending register 0 bit position 1
 432   1      
 433   1        //--------------MOIPR1 = 0x00000104---------------------------------------
 434   1      
 435   1          CAN_vWriteAMData(0x00000104); // load MO1 interrupt pointer register
 436   1      
 437   1        //  CAN Address pointing to the CAN_MOFGPR1
 438   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 439   1      
 440   1      
 441   1        //--------------MOFGPR1 = 0x00000000---------------------------------------
 442   1      
 443   1          CAN_vWriteAMData(0x00000000); // load MO1 FIFO/gateway pointer register
 444   1      
 445   1        //  CAN Address pointing to the CAN_MOFCR1
 446   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 447   1      
 448   1        ///  - this object is a STANDARD MESSAGE OBJECT
 449   1        ///  - 8 valid data bytes
 450   1      
 451   1        //--------------MOFCR1 = 0x08000000---------------------------------------
 452   1      
 453   1          CAN_vWriteAMData(0x08000000); // load MO1  function control register
 454   1      
 455   1        ///  -----------------------------------------------------------------------
 456   1        ///  Configuration of Message Object 2:
 457   1        ///  -----------------------------------------------------------------------
 458   1        ///  - message object 2 is valid
 459   1        ///  - message object is used as transmit object
 460   1        ///  - this message object is assigned to list 2 (node 1)
 461   1      
 462   1        //--------------MOCTR2 = 0x0EA80000---------------------------------------
 463   1      
 464   1          CAN_vWriteCANAddress(CAN_MOCTR2); // Addressing MO2 control register
 465   1      
 466   1          CAN_vWriteAMData(0x0EA80000); // load MO2 control register
 467   1      
 468   1        //  CAN Address pointing to the CAN_MOAR2
 469   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 470   1      
 471   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
 472   1        ///    order (like class 1)
 473   1        ///  - standard 11-bit identifier
 474   1        ///  - identifier 11-bit:      0x64A
 475   1      
 476   1        //--------------MOAR2 = 0xD9280000---------------------------------------
 477   1      
 478   1          CAN_vWriteAMData(0xD9280000); // load MO2 arbitration register
 479   1      
 480   1        //  CAN Address pointing to the CAN_MODATAH2
 481   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 482   1      
 483   1      
 484   1        //--------------MODATAH2 = 0x00000000---------------------------------------
 485   1      
 486   1          CAN_vWriteAMData(0x00000000); // load MO2 data register high
 487   1      
 488   1        //  CAN Address pointing to the CAN_MODATAL2
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 9   

 489   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 490   1      
 491   1        //--------------MODATAL2 = 0x00000000---------------------------------------
 492   1      
 493   1          CAN_vWriteAMData(0x00000000); // load MO2 data register low
 494   1      
 495   1        //  CAN Address pointing to the CAN_MOAMR2
 496   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 497   1      
 498   1        ///  - only accept receive frames with matching IDE bit
 499   1        ///  - acceptance mask 11-bit: 0x7FF
 500   1      
 501   1        //--------------CAN_MOAMR2 = 0x3FFFFFFF------------------------------------
 502   1      
 503   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO2 acceptance mask register
 504   1      
 505   1        //  CAN Address pointing to the CAN_MOIPR2
 506   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 507   1      
 508   1        ///  - use message pending register 0 bit position 2
 509   1      
 510   1        //--------------MOIPR2 = 0x00000204---------------------------------------
 511   1      
 512   1          CAN_vWriteAMData(0x00000204); // load MO2 interrupt pointer register
 513   1      
 514   1        //  CAN Address pointing to the CAN_MOFGPR2
 515   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 516   1      
 517   1      
 518   1        //--------------MOFGPR2 = 0x00000000---------------------------------------
 519   1      
 520   1          CAN_vWriteAMData(0x00000000); // load MO2 FIFO/gateway pointer register
 521   1      
 522   1        //  CAN Address pointing to the CAN_MOFCR2
 523   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 524   1      
 525   1        ///  - this object is a STANDARD MESSAGE OBJECT
 526   1        ///  - 8 valid data bytes
 527   1      
 528   1        //--------------MOFCR2 = 0x08000000---------------------------------------
 529   1      
 530   1          CAN_vWriteAMData(0x08000000); // load MO2  function control register
 531   1      
 532   1        ///  -----------------------------------------------------------------------
 533   1        ///  Configuration of Message Object 3:
 534   1        ///  -----------------------------------------------------------------------
 535   1        ///  - message object 3 is valid
 536   1        ///  - message object is used as transmit object
 537   1        ///  - this message object is assigned to list 2 (node 1)
 538   1      
 539   1        //--------------MOCTR3 = 0x0EA80000---------------------------------------
 540   1      
 541   1          CAN_vWriteCANAddress(CAN_MOCTR3); // Addressing MO3 control register
 542   1      
 543   1          CAN_vWriteAMData(0x0EA80000); // load MO3 control register
 544   1      
 545   1        //  CAN Address pointing to the CAN_MOAR3
 546   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 547   1      
 548   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
 549   1        ///    order (like class 1)
 550   1        ///  - standard 11-bit identifier
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 10  

 551   1        ///  - identifier 11-bit:      0x64B
 552   1      
 553   1        //--------------MOAR3 = 0xD92C0000---------------------------------------
 554   1      
 555   1          CAN_vWriteAMData(0xD92C0000); // load MO3 arbitration register
 556   1      
 557   1        //  CAN Address pointing to the CAN_MODATAH3
 558   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 559   1      
 560   1      
 561   1        //--------------MODATAH3 = 0x00000000---------------------------------------
 562   1      
 563   1          CAN_vWriteAMData(0x00000000); // load MO3 data register high
 564   1      
 565   1        //  CAN Address pointing to the CAN_MODATAL3
 566   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 567   1      
 568   1        //--------------MODATAL3 = 0x00000000---------------------------------------
 569   1      
 570   1          CAN_vWriteAMData(0x00000000); // load MO3 data register low
 571   1      
 572   1        //  CAN Address pointing to the CAN_MOAMR3
 573   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 574   1      
 575   1        ///  - only accept receive frames with matching IDE bit
 576   1        ///  - acceptance mask 11-bit: 0x7FF
 577   1      
 578   1        //--------------CAN_MOAMR3 = 0x3FFFFFFF------------------------------------
 579   1      
 580   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO3 acceptance mask register
 581   1      
 582   1        //  CAN Address pointing to the CAN_MOIPR3
 583   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 584   1      
 585   1        ///  - use message pending register 0 bit position 3
 586   1      
 587   1        //--------------MOIPR3 = 0x00000304---------------------------------------
 588   1      
 589   1          CAN_vWriteAMData(0x00000304); // load MO3 interrupt pointer register
 590   1      
 591   1        //  CAN Address pointing to the CAN_MOFGPR3
 592   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 593   1      
 594   1      
 595   1        //--------------MOFGPR3 = 0x00000000---------------------------------------
 596   1      
 597   1          CAN_vWriteAMData(0x00000000); // load MO3 FIFO/gateway pointer register
 598   1      
 599   1        //  CAN Address pointing to the CAN_MOFCR3
 600   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 601   1      
 602   1        ///  - this object is a STANDARD MESSAGE OBJECT
 603   1        ///  - 8 valid data bytes
 604   1      
 605   1        //--------------MOFCR3 = 0x08000000---------------------------------------
 606   1      
 607   1          CAN_vWriteAMData(0x08000000); // load MO3  function control register
 608   1      
 609   1        ///  -----------------------------------------------------------------------
 610   1        ///  Configuration of Message Object 4:
 611   1        ///  -----------------------------------------------------------------------
 612   1        ///  - message object 4 is valid
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 11  

 613   1        ///  - message object is used as receive object
 614   1        ///  - this message object is assigned to list 2 (node 1)
 615   1      
 616   1        //--------------MOCTR4 = 0x00A00000---------------------------------------
 617   1      
 618   1          CAN_vWriteCANAddress(CAN_MOCTR4); // Addressing MO4 control register
 619   1      
 620   1          CAN_vWriteAMData(0x00A00000); // load MO4 control register
 621   1      
 622   1        //  CAN Address pointing to the CAN_MOAR4
 623   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 624   1      
 625   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
 626   1        ///    order (like class 1)
 627   1        ///  - standard 11-bit identifier
 628   1        ///  - identifier 11-bit:      0x300
 629   1      
 630   1        //--------------MOAR4 = 0xCC000000---------------------------------------
 631   1      
 632   1          CAN_vWriteAMData(0xCC000000); // load MO4 arbitration register
 633   1      
 634   1        //  CAN Address pointing to the CAN_MODATAH4
 635   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 636   1      
 637   1      
 638   1        //--------------MODATAH4 = 0x00000000---------------------------------------
 639   1      
 640   1          CAN_vWriteAMData(0x00000000); // load MO4 data register high
 641   1      
 642   1        //  CAN Address pointing to the CAN_MODATAL4
 643   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 644   1      
 645   1        //--------------MODATAL4 = 0x00000000---------------------------------------
 646   1      
 647   1          CAN_vWriteAMData(0x00000000); // load MO4 data register low
 648   1      
 649   1        //  CAN Address pointing to the CAN_MOAMR4
 650   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 651   1      
 652   1        ///  - only accept receive frames with matching IDE bit
 653   1        ///  - acceptance mask 11-bit: 0x7FF
 654   1      
 655   1        //--------------CAN_MOAMR4 = 0x3FFFFFFF------------------------------------
 656   1      
 657   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO4 acceptance mask register
 658   1      
 659   1        //  CAN Address pointing to the CAN_MOIPR4
 660   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 661   1      
 662   1        ///  - use message pending register 0 bit position 4
 663   1      
 664   1        //--------------MOIPR4 = 0x00000404---------------------------------------
 665   1      
 666   1          CAN_vWriteAMData(0x00000404); // load MO4 interrupt pointer register
 667   1      
 668   1        //  CAN Address pointing to the CAN_MOFGPR4
 669   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 670   1      
 671   1      
 672   1        //--------------MOFGPR4 = 0x00000000---------------------------------------
 673   1      
 674   1          CAN_vWriteAMData(0x00000000); // load MO4 FIFO/gateway pointer register
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 12  

 675   1      
 676   1        //  CAN Address pointing to the CAN_MOFCR4
 677   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 678   1      
 679   1        ///  - this object is a STANDARD MESSAGE OBJECT
 680   1        ///  - 2 valid data bytes
 681   1      
 682   1        //--------------MOFCR4 = 0x02000000---------------------------------------
 683   1      
 684   1          CAN_vWriteAMData(0x02000000); // load MO4  function control register
 685   1      
 686   1        ///  -----------------------------------------------------------------------
 687   1        ///  Configuration of Message Object 5:
 688   1        ///  -----------------------------------------------------------------------
 689   1        ///  - message object 5 is valid
 690   1        ///  - message object is used as transmit object
 691   1        ///  - this message object is assigned to list 2 (node 1)
 692   1      
 693   1        //--------------MOCTR5 = 0x0EA80000---------------------------------------
 694   1      
 695   1          CAN_vWriteCANAddress(CAN_MOCTR5); // Addressing MO5 control register
 696   1      
 697   1          CAN_vWriteAMData(0x0EA80000); // load MO5 control register
 698   1      
 699   1        //  CAN Address pointing to the CAN_MOAR5
 700   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 701   1      
 702   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
 703   1        ///    order (like class 1)
 704   1        ///  - standard 11-bit identifier
 705   1        ///  - identifier 11-bit:      0x200
 706   1      
 707   1        //--------------MOAR5 = 0xC8000000---------------------------------------
 708   1      
 709   1          CAN_vWriteAMData(0xC8000000); // load MO5 arbitration register
 710   1      
 711   1        //  CAN Address pointing to the CAN_MODATAH5
 712   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 713   1      
 714   1      
 715   1        //--------------MODATAH5 = 0x00000000---------------------------------------
 716   1      
 717   1          CAN_vWriteAMData(0x00000000); // load MO5 data register high
 718   1      
 719   1        //  CAN Address pointing to the CAN_MODATAL5
 720   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 721   1      
 722   1        //--------------MODATAL5 = 0x00000000---------------------------------------
 723   1      
 724   1          CAN_vWriteAMData(0x00000000); // load MO5 data register low
 725   1      
 726   1        //  CAN Address pointing to the CAN_MOAMR5
 727   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 728   1      
 729   1        ///  - only accept receive frames with matching IDE bit
 730   1        ///  - acceptance mask 11-bit: 0x7FF
 731   1      
 732   1        //--------------CAN_MOAMR5 = 0x3FFFFFFF------------------------------------
 733   1      
 734   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO5 acceptance mask register
 735   1      
 736   1        //  CAN Address pointing to the CAN_MOIPR5
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 13  

 737   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 738   1      
 739   1        ///  - use message pending register 0 bit position 5
 740   1      
 741   1        //--------------MOIPR5 = 0x00000504---------------------------------------
 742   1      
 743   1          CAN_vWriteAMData(0x00000504); // load MO5 interrupt pointer register
 744   1      
 745   1        //  CAN Address pointing to the CAN_MOFGPR5
 746   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 747   1      
 748   1      
 749   1        //--------------MOFGPR5 = 0x00000000---------------------------------------
 750   1      
 751   1          CAN_vWriteAMData(0x00000000); // load MO5 FIFO/gateway pointer register
 752   1      
 753   1        //  CAN Address pointing to the CAN_MOFCR5
 754   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 755   1      
 756   1        ///  - this object is a STANDARD MESSAGE OBJECT
 757   1        ///  - 2 valid data bytes
 758   1      
 759   1        //--------------MOFCR5 = 0x02000000---------------------------------------
 760   1      
 761   1          CAN_vWriteAMData(0x02000000); // load MO5  function control register
 762   1      
 763   1        ///  -----------------------------------------------------------------------
 764   1        ///  Configuration of Message Object 6:
 765   1        ///  -----------------------------------------------------------------------
 766   1        ///  - message object 6 is not valid
 767   1        ///  -----------------------------------------------------------------------
 768   1        ///  Configuration of Message Object 7:
 769   1        ///  -----------------------------------------------------------------------
 770   1        ///  - message object 7 is not valid
 771   1        ///  -----------------------------------------------------------------------
 772   1        ///  Configuration of Message Object 8:
 773   1        ///  -----------------------------------------------------------------------
 774   1        ///  - message object 8 is not valid
 775   1        ///  -----------------------------------------------------------------------
 776   1        ///  Configuration of Message Object 9:
 777   1        ///  -----------------------------------------------------------------------
 778   1        ///  - message object 9 is not valid
 779   1        ///  -----------------------------------------------------------------------
 780   1        ///  Configuration of Message Object 10:
 781   1        ///  -----------------------------------------------------------------------
 782   1        ///  - message object 10 is not valid
 783   1        ///  -----------------------------------------------------------------------
 784   1        ///  Configuration of Message Object 11:
 785   1        ///  -----------------------------------------------------------------------
 786   1        ///  - message object 11 is not valid
 787   1        ///  -----------------------------------------------------------------------
 788   1        ///  Configuration of Message Object 12:
 789   1        ///  -----------------------------------------------------------------------
 790   1        ///  - message object 12 is not valid
 791   1        ///  -----------------------------------------------------------------------
 792   1        ///  Configuration of Message Object 13:
 793   1        ///  -----------------------------------------------------------------------
 794   1        ///  - message object 13 is not valid
 795   1        ///  -----------------------------------------------------------------------
 796   1        ///  Configuration of Message Object 14:
 797   1        ///  -----------------------------------------------------------------------
 798   1        ///  - message object 14 is not valid
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 14  

 799   1        ///  -----------------------------------------------------------------------
 800   1        ///  Configuration of Message Object 15:
 801   1        ///  -----------------------------------------------------------------------
 802   1        ///  - message object 15 is not valid
 803   1        ///  -----------------------------------------------------------------------
 804   1        ///  Configuration of Message Object 16:
 805   1        ///  -----------------------------------------------------------------------
 806   1        ///  - message object 16 is valid
 807   1        ///  - message object is used as transmit object
 808   1        ///  - this message object is assigned to list 2 (node 1)
 809   1      
 810   1        //--------------MOCTR16 = 0x0EA80000---------------------------------------
 811   1      
 812   1          CAN_vWriteCANAddress(CAN_MOCTR16); // Addressing MO16 control register
 813   1      
 814   1          CAN_vWriteAMData(0x0EA80000); // load MO16 control register
 815   1      
 816   1        //  CAN Address pointing to the CAN_MOAR16
 817   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 818   1      
 819   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
 820   1        ///    order (like class 1)
 821   1        ///  - standard 11-bit identifier
 822   1        ///  - identifier 11-bit:      0x748
 823   1      
 824   1        //--------------MOAR16 = 0xDD200000---------------------------------------
 825   1      
 826   1          CAN_vWriteAMData(0xDD200000); // load MO16 arbitration register
 827   1      
 828   1        //  CAN Address pointing to the CAN_MODATAH16
 829   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 830   1      
 831   1      
 832   1        //--------------MODATAH16 = 0x00000000---------------------------------------
 833   1      
 834   1          CAN_vWriteAMData(0x00000000); // load MO16 data register high
 835   1      
 836   1        //  CAN Address pointing to the CAN_MODATAL16
 837   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 838   1      
 839   1        //--------------MODATAL16 = 0x00000000---------------------------------------
 840   1      
 841   1          CAN_vWriteAMData(0x00000000); // load MO16 data register low
 842   1      
 843   1        //  CAN Address pointing to the CAN_MOAMR16
 844   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 845   1      
 846   1        ///  - only accept receive frames with matching IDE bit
 847   1        ///  - acceptance mask 11-bit: 0x7FF
 848   1      
 849   1        //--------------CAN_MOAMR16 = 0x3FFFFFFF------------------------------------
 850   1      
 851   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO16 acceptance mask register
 852   1      
 853   1        //  CAN Address pointing to the CAN_MOIPR16
 854   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 855   1      
 856   1        ///  - use message pending register 0 bit position 16
 857   1      
 858   1        //--------------MOIPR16 = 0x00001000---------------------------------------
 859   1      
 860   1          CAN_vWriteAMData(0x00001000); // load MO16 interrupt pointer register
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 15  

 861   1      
 862   1        //  CAN Address pointing to the CAN_MOFGPR16
 863   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 864   1      
 865   1      
 866   1        //--------------MOFGPR16 = 0x00000000---------------------------------------
 867   1      
 868   1          CAN_vWriteAMData(0x00000000); // load MO16 FIFO/gateway pointer register
 869   1      
 870   1        //  CAN Address pointing to the CAN_MOFCR16
 871   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 872   1      
 873   1        ///  - this object is a STANDARD MESSAGE OBJECT
 874   1        ///  - 8 valid data bytes
 875   1      
 876   1        //--------------MOFCR16 = 0x08000000---------------------------------------
 877   1      
 878   1          CAN_vWriteAMData(0x08000000); // load MO16  function control register
 879   1      
 880   1        ///  -----------------------------------------------------------------------
 881   1        ///  Configuration of Message Object 17:
 882   1        ///  -----------------------------------------------------------------------
 883   1        ///  - message object 17 is valid
 884   1        ///  - message object is used as transmit object
 885   1        ///  - this message object is assigned to list 2 (node 1)
 886   1      
 887   1        //--------------MOCTR17 = 0x0EA80000---------------------------------------
 888   1      
 889   1          CAN_vWriteCANAddress(CAN_MOCTR17); // Addressing MO17 control register
 890   1      
 891   1          CAN_vWriteAMData(0x0EA80000); // load MO17 control register
 892   1      
 893   1        //  CAN Address pointing to the CAN_MOAR17
 894   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 895   1      
 896   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
 897   1        ///    order (like class 1)
 898   1        ///  - standard 11-bit identifier
 899   1        ///  - identifier 11-bit:      0x749
 900   1      
 901   1        //--------------MOAR17 = 0xDD240000---------------------------------------
 902   1      
 903   1          CAN_vWriteAMData(0xDD240000); // load MO17 arbitration register
 904   1      
 905   1        //  CAN Address pointing to the CAN_MODATAH17
 906   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 907   1      
 908   1      
 909   1        //--------------MODATAH17 = 0x00000000---------------------------------------
 910   1      
 911   1          CAN_vWriteAMData(0x00000000); // load MO17 data register high
 912   1      
 913   1        //  CAN Address pointing to the CAN_MODATAL17
 914   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 915   1      
 916   1        //--------------MODATAL17 = 0x00000000---------------------------------------
 917   1      
 918   1          CAN_vWriteAMData(0x00000000); // load MO17 data register low
 919   1      
 920   1        //  CAN Address pointing to the CAN_MOAMR17
 921   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 922   1      
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 16  

 923   1        ///  - only accept receive frames with matching IDE bit
 924   1        ///  - acceptance mask 11-bit: 0x7FF
 925   1      
 926   1        //--------------CAN_MOAMR17 = 0x3FFFFFFF------------------------------------
 927   1      
 928   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO17 acceptance mask register
 929   1      
 930   1        //  CAN Address pointing to the CAN_MOIPR17
 931   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 932   1      
 933   1        ///  - use message pending register 0 bit position 17
 934   1      
 935   1        //--------------MOIPR17 = 0x00001100---------------------------------------
 936   1      
 937   1          CAN_vWriteAMData(0x00001100); // load MO17 interrupt pointer register
 938   1      
 939   1        //  CAN Address pointing to the CAN_MOFGPR17
 940   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 941   1      
 942   1      
 943   1        //--------------MOFGPR17 = 0x00000000---------------------------------------
 944   1      
 945   1          CAN_vWriteAMData(0x00000000); // load MO17 FIFO/gateway pointer register
 946   1      
 947   1        //  CAN Address pointing to the CAN_MOFCR17
 948   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 949   1      
 950   1        ///  - this object is a STANDARD MESSAGE OBJECT
 951   1        ///  - 8 valid data bytes
 952   1      
 953   1        //--------------MOFCR17 = 0x08000000---------------------------------------
 954   1      
 955   1          CAN_vWriteAMData(0x08000000); // load MO17  function control register
 956   1      
 957   1        ///  -----------------------------------------------------------------------
 958   1        ///  Configuration of Message Object 18:
 959   1        ///  -----------------------------------------------------------------------
 960   1        ///  - message object 18 is valid
 961   1        ///  - message object is used as transmit object
 962   1        ///  - this message object is assigned to list 2 (node 1)
 963   1      
 964   1        //--------------MOCTR18 = 0x0EA80000---------------------------------------
 965   1      
 966   1          CAN_vWriteCANAddress(CAN_MOCTR18); // Addressing MO18 control register
 967   1      
 968   1          CAN_vWriteAMData(0x0EA80000); // load MO18 control register
 969   1      
 970   1        //  CAN Address pointing to the CAN_MOAR18
 971   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 972   1      
 973   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
 974   1        ///    order (like class 1)
 975   1        ///  - standard 11-bit identifier
 976   1        ///  - identifier 11-bit:      0x74A
 977   1      
 978   1        //--------------MOAR18 = 0xDD280000---------------------------------------
 979   1      
 980   1          CAN_vWriteAMData(0xDD280000); // load MO18 arbitration register
 981   1      
 982   1        //  CAN Address pointing to the CAN_MODATAH18
 983   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 984   1      
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 17  

 985   1      
 986   1        //--------------MODATAH18 = 0x00000000---------------------------------------
 987   1      
 988   1          CAN_vWriteAMData(0x00000000); // load MO18 data register high
 989   1      
 990   1        //  CAN Address pointing to the CAN_MODATAL18
 991   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 992   1      
 993   1        //--------------MODATAL18 = 0x00000000---------------------------------------
 994   1      
 995   1          CAN_vWriteAMData(0x00000000); // load MO18 data register low
 996   1      
 997   1        //  CAN Address pointing to the CAN_MOAMR18
 998   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
 999   1      
1000   1        ///  - only accept receive frames with matching IDE bit
1001   1        ///  - acceptance mask 11-bit: 0x7FF
1002   1      
1003   1        //--------------CAN_MOAMR18 = 0x3FFFFFFF------------------------------------
1004   1      
1005   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO18 acceptance mask register
1006   1      
1007   1        //  CAN Address pointing to the CAN_MOIPR18
1008   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1009   1      
1010   1        ///  - use message pending register 0 bit position 18
1011   1      
1012   1        //--------------MOIPR18 = 0x00001200---------------------------------------
1013   1      
1014   1          CAN_vWriteAMData(0x00001200); // load MO18 interrupt pointer register
1015   1      
1016   1        //  CAN Address pointing to the CAN_MOFGPR18
1017   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1018   1      
1019   1      
1020   1        //--------------MOFGPR18 = 0x00000000---------------------------------------
1021   1      
1022   1          CAN_vWriteAMData(0x00000000); // load MO18 FIFO/gateway pointer register
1023   1      
1024   1        //  CAN Address pointing to the CAN_MOFCR18
1025   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1026   1      
1027   1        ///  - this object is a STANDARD MESSAGE OBJECT
1028   1        ///  - 8 valid data bytes
1029   1      
1030   1        //--------------MOFCR18 = 0x08000000---------------------------------------
1031   1      
1032   1          CAN_vWriteAMData(0x08000000); // load MO18  function control register
1033   1      
1034   1        ///  -----------------------------------------------------------------------
1035   1        ///  Configuration of Message Object 19:
1036   1        ///  -----------------------------------------------------------------------
1037   1        ///  - message object 19 is valid
1038   1        ///  - message object is used as transmit object
1039   1        ///  - this message object is assigned to list 2 (node 1)
1040   1      
1041   1        //--------------MOCTR19 = 0x0EA80000---------------------------------------
1042   1      
1043   1          CAN_vWriteCANAddress(CAN_MOCTR19); // Addressing MO19 control register
1044   1      
1045   1          CAN_vWriteAMData(0x0EA80000); // load MO19 control register
1046   1      
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 18  

1047   1        //  CAN Address pointing to the CAN_MOAR19
1048   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1049   1      
1050   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1051   1        ///    order (like class 1)
1052   1        ///  - standard 11-bit identifier
1053   1        ///  - identifier 11-bit:      0x74B
1054   1      
1055   1        //--------------MOAR19 = 0xDD2C0000---------------------------------------
1056   1      
1057   1          CAN_vWriteAMData(0xDD2C0000); // load MO19 arbitration register
1058   1      
1059   1        //  CAN Address pointing to the CAN_MODATAH19
1060   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1061   1      
1062   1      
1063   1        //--------------MODATAH19 = 0x00000000---------------------------------------
1064   1      
1065   1          CAN_vWriteAMData(0x00000000); // load MO19 data register high
1066   1      
1067   1        //  CAN Address pointing to the CAN_MODATAL19
1068   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1069   1      
1070   1        //--------------MODATAL19 = 0x00000000---------------------------------------
1071   1      
1072   1          CAN_vWriteAMData(0x00000000); // load MO19 data register low
1073   1      
1074   1        //  CAN Address pointing to the CAN_MOAMR19
1075   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1076   1      
1077   1        ///  - only accept receive frames with matching IDE bit
1078   1        ///  - acceptance mask 11-bit: 0x7FF
1079   1      
1080   1        //--------------CAN_MOAMR19 = 0x3FFFFFFF------------------------------------
1081   1      
1082   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO19 acceptance mask register
1083   1      
1084   1        //  CAN Address pointing to the CAN_MOIPR19
1085   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1086   1      
1087   1        ///  - use message pending register 0 bit position 19
1088   1      
1089   1        //--------------MOIPR19 = 0x00001300---------------------------------------
1090   1      
1091   1          CAN_vWriteAMData(0x00001300); // load MO19 interrupt pointer register
1092   1      
1093   1        //  CAN Address pointing to the CAN_MOFGPR19
1094   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1095   1      
1096   1      
1097   1        //--------------MOFGPR19 = 0x00000000---------------------------------------
1098   1      
1099   1          CAN_vWriteAMData(0x00000000); // load MO19 FIFO/gateway pointer register
1100   1      
1101   1        //  CAN Address pointing to the CAN_MOFCR19
1102   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1103   1      
1104   1        ///  - this object is a STANDARD MESSAGE OBJECT
1105   1        ///  - 8 valid data bytes
1106   1      
1107   1        //--------------MOFCR19 = 0x08000000---------------------------------------
1108   1      
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 19  

1109   1          CAN_vWriteAMData(0x08000000); // load MO19  function control register
1110   1      
1111   1        ///  -----------------------------------------------------------------------
1112   1        ///  Configuration of Message Object 20:
1113   1        ///  -----------------------------------------------------------------------
1114   1        ///  - message object 20 is valid
1115   1        ///  - message object is used as transmit object
1116   1        ///  - this message object is assigned to list 2 (node 1)
1117   1      
1118   1        //--------------MOCTR20 = 0x0EA80000---------------------------------------
1119   1      
1120   1          CAN_vWriteCANAddress(CAN_MOCTR20); // Addressing MO20 control register
1121   1      
1122   1          CAN_vWriteAMData(0x0EA80000); // load MO20 control register
1123   1      
1124   1        //  CAN Address pointing to the CAN_MOAR20
1125   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1126   1      
1127   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1128   1        ///    order (like class 1)
1129   1        ///  - standard 11-bit identifier
1130   1        ///  - identifier 11-bit:      0x74C
1131   1      
1132   1        //--------------MOAR20 = 0xDD300000---------------------------------------
1133   1      
1134   1          CAN_vWriteAMData(0xDD300000); // load MO20 arbitration register
1135   1      
1136   1        //  CAN Address pointing to the CAN_MODATAH20
1137   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1138   1      
1139   1      
1140   1        //--------------MODATAH20 = 0x00000000---------------------------------------
1141   1      
1142   1          CAN_vWriteAMData(0x00000000); // load MO20 data register high
1143   1      
1144   1        //  CAN Address pointing to the CAN_MODATAL20
1145   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1146   1      
1147   1        //--------------MODATAL20 = 0x00000000---------------------------------------
1148   1      
1149   1          CAN_vWriteAMData(0x00000000); // load MO20 data register low
1150   1      
1151   1        //  CAN Address pointing to the CAN_MOAMR20
1152   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1153   1      
1154   1        ///  - only accept receive frames with matching IDE bit
1155   1        ///  - acceptance mask 11-bit: 0x7FF
1156   1      
1157   1        //--------------CAN_MOAMR20 = 0x3FFFFFFF------------------------------------
1158   1      
1159   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO20 acceptance mask register
1160   1      
1161   1        //  CAN Address pointing to the CAN_MOIPR20
1162   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1163   1      
1164   1        ///  - use message pending register 0 bit position 20
1165   1      
1166   1        //--------------MOIPR20 = 0x00001400---------------------------------------
1167   1      
1168   1          CAN_vWriteAMData(0x00001400); // load MO20 interrupt pointer register
1169   1      
1170   1        //  CAN Address pointing to the CAN_MOFGPR20
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 20  

1171   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1172   1      
1173   1      
1174   1        //--------------MOFGPR20 = 0x00000000---------------------------------------
1175   1      
1176   1          CAN_vWriteAMData(0x00000000); // load MO20 FIFO/gateway pointer register
1177   1      
1178   1        //  CAN Address pointing to the CAN_MOFCR20
1179   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1180   1      
1181   1        ///  - this object is a STANDARD MESSAGE OBJECT
1182   1        ///  - 8 valid data bytes
1183   1      
1184   1        //--------------MOFCR20 = 0x08000000---------------------------------------
1185   1      
1186   1          CAN_vWriteAMData(0x08000000); // load MO20  function control register
1187   1      
1188   1        ///  -----------------------------------------------------------------------
1189   1        ///  Configuration of Message Object 21:
1190   1        ///  -----------------------------------------------------------------------
1191   1        ///  - message object 21 is valid
1192   1        ///  - message object is used as transmit object
1193   1        ///  - this message object is assigned to list 2 (node 1)
1194   1      
1195   1        //--------------MOCTR21 = 0x0EA80000---------------------------------------
1196   1      
1197   1          CAN_vWriteCANAddress(CAN_MOCTR21); // Addressing MO21 control register
1198   1      
1199   1          CAN_vWriteAMData(0x0EA80000); // load MO21 control register
1200   1      
1201   1        //  CAN Address pointing to the CAN_MOAR21
1202   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1203   1      
1204   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1205   1        ///    order (like class 1)
1206   1        ///  - standard 11-bit identifier
1207   1        ///  - identifier 11-bit:      0x74D
1208   1      
1209   1        //--------------MOAR21 = 0xDD340000---------------------------------------
1210   1      
1211   1          CAN_vWriteAMData(0xDD340000); // load MO21 arbitration register
1212   1      
1213   1        //  CAN Address pointing to the CAN_MODATAH21
1214   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1215   1      
1216   1      
1217   1        //--------------MODATAH21 = 0x00000000---------------------------------------
1218   1      
1219   1          CAN_vWriteAMData(0x00000000); // load MO21 data register high
1220   1      
1221   1        //  CAN Address pointing to the CAN_MODATAL21
1222   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1223   1      
1224   1        //--------------MODATAL21 = 0x00000000---------------------------------------
1225   1      
1226   1          CAN_vWriteAMData(0x00000000); // load MO21 data register low
1227   1      
1228   1        //  CAN Address pointing to the CAN_MOAMR21
1229   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1230   1      
1231   1        ///  - only accept receive frames with matching IDE bit
1232   1        ///  - acceptance mask 11-bit: 0x7FF
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 21  

1233   1      
1234   1        //--------------CAN_MOAMR21 = 0x3FFFFFFF------------------------------------
1235   1      
1236   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO21 acceptance mask register
1237   1      
1238   1        //  CAN Address pointing to the CAN_MOIPR21
1239   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1240   1      
1241   1        ///  - use message pending register 0 bit position 21
1242   1      
1243   1        //--------------MOIPR21 = 0x00001500---------------------------------------
1244   1      
1245   1          CAN_vWriteAMData(0x00001500); // load MO21 interrupt pointer register
1246   1      
1247   1        //  CAN Address pointing to the CAN_MOFGPR21
1248   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1249   1      
1250   1      
1251   1        //--------------MOFGPR21 = 0x00000000---------------------------------------
1252   1      
1253   1          CAN_vWriteAMData(0x00000000); // load MO21 FIFO/gateway pointer register
1254   1      
1255   1        //  CAN Address pointing to the CAN_MOFCR21
1256   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1257   1      
1258   1        ///  - this object is a STANDARD MESSAGE OBJECT
1259   1        ///  - 8 valid data bytes
1260   1      
1261   1        //--------------MOFCR21 = 0x08000000---------------------------------------
1262   1      
1263   1          CAN_vWriteAMData(0x08000000); // load MO21  function control register
1264   1      
1265   1        ///  -----------------------------------------------------------------------
1266   1        ///  Configuration of Message Object 22:
1267   1        ///  -----------------------------------------------------------------------
1268   1        ///  - message object 22 is valid
1269   1        ///  - message object is used as transmit object
1270   1        ///  - this message object is assigned to list 2 (node 1)
1271   1      
1272   1        //--------------MOCTR22 = 0x0EA80000---------------------------------------
1273   1      
1274   1          CAN_vWriteCANAddress(CAN_MOCTR22); // Addressing MO22 control register
1275   1      
1276   1          CAN_vWriteAMData(0x0EA80000); // load MO22 control register
1277   1      
1278   1        //  CAN Address pointing to the CAN_MOAR22
1279   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1280   1      
1281   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1282   1        ///    order (like class 1)
1283   1        ///  - standard 11-bit identifier
1284   1        ///  - identifier 11-bit:      0x74E
1285   1      
1286   1        //--------------MOAR22 = 0xDD380000---------------------------------------
1287   1      
1288   1          CAN_vWriteAMData(0xDD380000); // load MO22 arbitration register
1289   1      
1290   1        //  CAN Address pointing to the CAN_MODATAH22
1291   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1292   1      
1293   1      
1294   1        //--------------MODATAH22 = 0x00000000---------------------------------------
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 22  

1295   1      
1296   1          CAN_vWriteAMData(0x00000000); // load MO22 data register high
1297   1      
1298   1        //  CAN Address pointing to the CAN_MODATAL22
1299   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1300   1      
1301   1        //--------------MODATAL22 = 0x00000000---------------------------------------
1302   1      
1303   1          CAN_vWriteAMData(0x00000000); // load MO22 data register low
1304   1      
1305   1        //  CAN Address pointing to the CAN_MOAMR22
1306   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1307   1      
1308   1        ///  - only accept receive frames with matching IDE bit
1309   1        ///  - acceptance mask 11-bit: 0x7FF
1310   1      
1311   1        //--------------CAN_MOAMR22 = 0x3FFFFFFF------------------------------------
1312   1      
1313   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO22 acceptance mask register
1314   1      
1315   1        //  CAN Address pointing to the CAN_MOIPR22
1316   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1317   1      
1318   1        ///  - use message pending register 0 bit position 22
1319   1      
1320   1        //--------------MOIPR22 = 0x00001600---------------------------------------
1321   1      
1322   1          CAN_vWriteAMData(0x00001600); // load MO22 interrupt pointer register
1323   1      
1324   1        //  CAN Address pointing to the CAN_MOFGPR22
1325   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1326   1      
1327   1      
1328   1        //--------------MOFGPR22 = 0x00000000---------------------------------------
1329   1      
1330   1          CAN_vWriteAMData(0x00000000); // load MO22 FIFO/gateway pointer register
1331   1      
1332   1        //  CAN Address pointing to the CAN_MOFCR22
1333   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1334   1      
1335   1        ///  - this object is a STANDARD MESSAGE OBJECT
1336   1        ///  - 8 valid data bytes
1337   1      
1338   1        //--------------MOFCR22 = 0x08000000---------------------------------------
1339   1      
1340   1          CAN_vWriteAMData(0x08000000); // load MO22  function control register
1341   1      
1342   1        ///  -----------------------------------------------------------------------
1343   1        ///  Configuration of Message Object 23:
1344   1        ///  -----------------------------------------------------------------------
1345   1        ///  - message object 23 is valid
1346   1        ///  - message object is used as transmit object
1347   1        ///  - this message object is assigned to list 2 (node 1)
1348   1      
1349   1        //--------------MOCTR23 = 0x0EA80000---------------------------------------
1350   1      
1351   1          CAN_vWriteCANAddress(CAN_MOCTR23); // Addressing MO23 control register
1352   1      
1353   1          CAN_vWriteAMData(0x0EA80000); // load MO23 control register
1354   1      
1355   1        //  CAN Address pointing to the CAN_MOAR23
1356   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 23  

1357   1      
1358   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1359   1        ///    order (like class 1)
1360   1        ///  - standard 11-bit identifier
1361   1        ///  - identifier 11-bit:      0x74F
1362   1      
1363   1        //--------------MOAR23 = 0xDD3C0000---------------------------------------
1364   1      
1365   1          CAN_vWriteAMData(0xDD3C0000); // load MO23 arbitration register
1366   1      
1367   1        //  CAN Address pointing to the CAN_MODATAH23
1368   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1369   1      
1370   1      
1371   1        //--------------MODATAH23 = 0x00000000---------------------------------------
1372   1      
1373   1          CAN_vWriteAMData(0x00000000); // load MO23 data register high
1374   1      
1375   1        //  CAN Address pointing to the CAN_MODATAL23
1376   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1377   1      
1378   1        //--------------MODATAL23 = 0x00000000---------------------------------------
1379   1      
1380   1          CAN_vWriteAMData(0x00000000); // load MO23 data register low
1381   1      
1382   1        //  CAN Address pointing to the CAN_MOAMR23
1383   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1384   1      
1385   1        ///  - only accept receive frames with matching IDE bit
1386   1        ///  - acceptance mask 11-bit: 0x7FF
1387   1      
1388   1        //--------------CAN_MOAMR23 = 0x3FFFFFFF------------------------------------
1389   1      
1390   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO23 acceptance mask register
1391   1      
1392   1        //  CAN Address pointing to the CAN_MOIPR23
1393   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1394   1      
1395   1        ///  - use message pending register 0 bit position 23
1396   1      
1397   1        //--------------MOIPR23 = 0x00001700---------------------------------------
1398   1      
1399   1          CAN_vWriteAMData(0x00001700); // load MO23 interrupt pointer register
1400   1      
1401   1        //  CAN Address pointing to the CAN_MOFGPR23
1402   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1403   1      
1404   1      
1405   1        //--------------MOFGPR23 = 0x00000000---------------------------------------
1406   1      
1407   1          CAN_vWriteAMData(0x00000000); // load MO23 FIFO/gateway pointer register
1408   1      
1409   1        //  CAN Address pointing to the CAN_MOFCR23
1410   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1411   1      
1412   1        ///  - this object is a STANDARD MESSAGE OBJECT
1413   1        ///  - 8 valid data bytes
1414   1      
1415   1        //--------------MOFCR23 = 0x08000000---------------------------------------
1416   1      
1417   1          CAN_vWriteAMData(0x08000000); // load MO23  function control register
1418   1      
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 24  

1419   1        ///  -----------------------------------------------------------------------
1420   1        ///  Configuration of Message Object 24:
1421   1        ///  -----------------------------------------------------------------------
1422   1        ///  - message object 24 is valid
1423   1        ///  - message object is used as transmit object
1424   1        ///  - this message object is assigned to list 2 (node 1)
1425   1      
1426   1        //--------------MOCTR24 = 0x0EA80000---------------------------------------
1427   1      
1428   1          CAN_vWriteCANAddress(CAN_MOCTR24); // Addressing MO24 control register
1429   1      
1430   1          CAN_vWriteAMData(0x0EA80000); // load MO24 control register
1431   1      
1432   1        //  CAN Address pointing to the CAN_MOAR24
1433   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1434   1      
1435   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1436   1        ///    order (like class 1)
1437   1        ///  - standard 11-bit identifier
1438   1        ///  - identifier 11-bit:      0x750
1439   1      
1440   1        //--------------MOAR24 = 0xDD400000---------------------------------------
1441   1      
1442   1          CAN_vWriteAMData(0xDD400000); // load MO24 arbitration register
1443   1      
1444   1        //  CAN Address pointing to the CAN_MODATAH24
1445   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1446   1      
1447   1      
1448   1        //--------------MODATAH24 = 0x00000000---------------------------------------
1449   1      
1450   1          CAN_vWriteAMData(0x00000000); // load MO24 data register high
1451   1      
1452   1        //  CAN Address pointing to the CAN_MODATAL24
1453   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1454   1      
1455   1        //--------------MODATAL24 = 0x00000000---------------------------------------
1456   1      
1457   1          CAN_vWriteAMData(0x00000000); // load MO24 data register low
1458   1      
1459   1        //  CAN Address pointing to the CAN_MOAMR24
1460   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1461   1      
1462   1        ///  - only accept receive frames with matching IDE bit
1463   1        ///  - acceptance mask 11-bit: 0x7FF
1464   1      
1465   1        //--------------CAN_MOAMR24 = 0x3FFFFFFF------------------------------------
1466   1      
1467   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO24 acceptance mask register
1468   1      
1469   1        //  CAN Address pointing to the CAN_MOIPR24
1470   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1471   1      
1472   1        ///  - use message pending register 0 bit position 24
1473   1      
1474   1        //--------------MOIPR24 = 0x00001800---------------------------------------
1475   1      
1476   1          CAN_vWriteAMData(0x00001800); // load MO24 interrupt pointer register
1477   1      
1478   1        //  CAN Address pointing to the CAN_MOFGPR24
1479   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1480   1      
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 25  

1481   1      
1482   1        //--------------MOFGPR24 = 0x00000000---------------------------------------
1483   1      
1484   1          CAN_vWriteAMData(0x00000000); // load MO24 FIFO/gateway pointer register
1485   1      
1486   1        //  CAN Address pointing to the CAN_MOFCR24
1487   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1488   1      
1489   1        ///  - this object is a STANDARD MESSAGE OBJECT
1490   1        ///  - 8 valid data bytes
1491   1      
1492   1        //--------------MOFCR24 = 0x08000000---------------------------------------
1493   1      
1494   1          CAN_vWriteAMData(0x08000000); // load MO24  function control register
1495   1      
1496   1        ///  -----------------------------------------------------------------------
1497   1        ///  Configuration of Message Object 25:
1498   1        ///  -----------------------------------------------------------------------
1499   1        ///  - message object 25 is valid
1500   1        ///  - message object is used as transmit object
1501   1        ///  - this message object is assigned to list 2 (node 1)
1502   1      
1503   1        //--------------MOCTR25 = 0x0EA80000---------------------------------------
1504   1      
1505   1          CAN_vWriteCANAddress(CAN_MOCTR25); // Addressing MO25 control register
1506   1      
1507   1          CAN_vWriteAMData(0x0EA80000); // load MO25 control register
1508   1      
1509   1        //  CAN Address pointing to the CAN_MOAR25
1510   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1511   1      
1512   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1513   1        ///    order (like class 1)
1514   1        ///  - standard 11-bit identifier
1515   1        ///  - identifier 11-bit:      0x751
1516   1      
1517   1        //--------------MOAR25 = 0xDD440000---------------------------------------
1518   1      
1519   1          CAN_vWriteAMData(0xDD440000); // load MO25 arbitration register
1520   1      
1521   1        //  CAN Address pointing to the CAN_MODATAH25
1522   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1523   1      
1524   1      
1525   1        //--------------MODATAH25 = 0x00000000---------------------------------------
1526   1      
1527   1          CAN_vWriteAMData(0x00000000); // load MO25 data register high
1528   1      
1529   1        //  CAN Address pointing to the CAN_MODATAL25
1530   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1531   1      
1532   1        //--------------MODATAL25 = 0x00000000---------------------------------------
1533   1      
1534   1          CAN_vWriteAMData(0x00000000); // load MO25 data register low
1535   1      
1536   1        //  CAN Address pointing to the CAN_MOAMR25
1537   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1538   1      
1539   1        ///  - only accept receive frames with matching IDE bit
1540   1        ///  - acceptance mask 11-bit: 0x7FF
1541   1      
1542   1        //--------------CAN_MOAMR25 = 0x3FFFFFFF------------------------------------
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 26  

1543   1      
1544   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO25 acceptance mask register
1545   1      
1546   1        //  CAN Address pointing to the CAN_MOIPR25
1547   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1548   1      
1549   1        ///  - use message pending register 0 bit position 25
1550   1      
1551   1        //--------------MOIPR25 = 0x00001900---------------------------------------
1552   1      
1553   1          CAN_vWriteAMData(0x00001900); // load MO25 interrupt pointer register
1554   1      
1555   1        //  CAN Address pointing to the CAN_MOFGPR25
1556   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1557   1      
1558   1      
1559   1        //--------------MOFGPR25 = 0x00000000---------------------------------------
1560   1      
1561   1          CAN_vWriteAMData(0x00000000); // load MO25 FIFO/gateway pointer register
1562   1      
1563   1        //  CAN Address pointing to the CAN_MOFCR25
1564   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1565   1      
1566   1        ///  - this object is a STANDARD MESSAGE OBJECT
1567   1        ///  - 8 valid data bytes
1568   1      
1569   1        //--------------MOFCR25 = 0x08000000---------------------------------------
1570   1      
1571   1          CAN_vWriteAMData(0x08000000); // load MO25  function control register
1572   1      
1573   1        ///  -----------------------------------------------------------------------
1574   1        ///  Configuration of Message Object 26:
1575   1        ///  -----------------------------------------------------------------------
1576   1        ///  - message object 26 is valid
1577   1        ///  - message object is used as transmit object
1578   1        ///  - this message object is assigned to list 2 (node 1)
1579   1      
1580   1        //--------------MOCTR26 = 0x0EA80000---------------------------------------
1581   1      
1582   1          CAN_vWriteCANAddress(CAN_MOCTR26); // Addressing MO26 control register
1583   1      
1584   1          CAN_vWriteAMData(0x0EA80000); // load MO26 control register
1585   1      
1586   1        //  CAN Address pointing to the CAN_MOAR26
1587   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1588   1      
1589   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1590   1        ///    order (like class 1)
1591   1        ///  - standard 11-bit identifier
1592   1        ///  - identifier 11-bit:      0x752
1593   1      
1594   1        //--------------MOAR26 = 0xDD480000---------------------------------------
1595   1      
1596   1          CAN_vWriteAMData(0xDD480000); // load MO26 arbitration register
1597   1      
1598   1        //  CAN Address pointing to the CAN_MODATAH26
1599   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1600   1      
1601   1      
1602   1        //--------------MODATAH26 = 0x00000000---------------------------------------
1603   1      
1604   1          CAN_vWriteAMData(0x00000000); // load MO26 data register high
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 27  

1605   1      
1606   1        //  CAN Address pointing to the CAN_MODATAL26
1607   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1608   1      
1609   1        //--------------MODATAL26 = 0x00000000---------------------------------------
1610   1      
1611   1          CAN_vWriteAMData(0x00000000); // load MO26 data register low
1612   1      
1613   1        //  CAN Address pointing to the CAN_MOAMR26
1614   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1615   1      
1616   1        ///  - only accept receive frames with matching IDE bit
1617   1        ///  - acceptance mask 11-bit: 0x7FF
1618   1      
1619   1        //--------------CAN_MOAMR26 = 0x3FFFFFFF------------------------------------
1620   1      
1621   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO26 acceptance mask register
1622   1      
1623   1        //  CAN Address pointing to the CAN_MOIPR26
1624   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1625   1      
1626   1        ///  - use message pending register 0 bit position 26
1627   1      
1628   1        //--------------MOIPR26 = 0x00001A00---------------------------------------
1629   1      
1630   1          CAN_vWriteAMData(0x00001A00); // load MO26 interrupt pointer register
1631   1      
1632   1        //  CAN Address pointing to the CAN_MOFGPR26
1633   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1634   1      
1635   1      
1636   1        //--------------MOFGPR26 = 0x00000000---------------------------------------
1637   1      
1638   1          CAN_vWriteAMData(0x00000000); // load MO26 FIFO/gateway pointer register
1639   1      
1640   1        //  CAN Address pointing to the CAN_MOFCR26
1641   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1642   1      
1643   1        ///  - this object is a STANDARD MESSAGE OBJECT
1644   1        ///  - 8 valid data bytes
1645   1      
1646   1        //--------------MOFCR26 = 0x08000000---------------------------------------
1647   1      
1648   1          CAN_vWriteAMData(0x08000000); // load MO26  function control register
1649   1      
1650   1        ///  -----------------------------------------------------------------------
1651   1        ///  Configuration of Message Object 27:
1652   1        ///  -----------------------------------------------------------------------
1653   1        ///  - message object 27 is valid
1654   1        ///  - message object is used as transmit object
1655   1        ///  - this message object is assigned to list 2 (node 1)
1656   1      
1657   1        //--------------MOCTR27 = 0x0EA80000---------------------------------------
1658   1      
1659   1          CAN_vWriteCANAddress(CAN_MOCTR27); // Addressing MO27 control register
1660   1      
1661   1          CAN_vWriteAMData(0x0EA80000); // load MO27 control register
1662   1      
1663   1        //  CAN Address pointing to the CAN_MOAR27
1664   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1665   1      
1666   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 28  

1667   1        ///    order (like class 1)
1668   1        ///  - standard 11-bit identifier
1669   1        ///  - identifier 11-bit:      0x753
1670   1      
1671   1        //--------------MOAR27 = 0xDD4C0000---------------------------------------
1672   1      
1673   1          CAN_vWriteAMData(0xDD4C0000); // load MO27 arbitration register
1674   1      
1675   1        //  CAN Address pointing to the CAN_MODATAH27
1676   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1677   1      
1678   1      
1679   1        //--------------MODATAH27 = 0x00000000---------------------------------------
1680   1      
1681   1          CAN_vWriteAMData(0x00000000); // load MO27 data register high
1682   1      
1683   1        //  CAN Address pointing to the CAN_MODATAL27
1684   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1685   1      
1686   1        //--------------MODATAL27 = 0x00000000---------------------------------------
1687   1      
1688   1          CAN_vWriteAMData(0x00000000); // load MO27 data register low
1689   1      
1690   1        //  CAN Address pointing to the CAN_MOAMR27
1691   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1692   1      
1693   1        ///  - only accept receive frames with matching IDE bit
1694   1        ///  - acceptance mask 11-bit: 0x7FF
1695   1      
1696   1        //--------------CAN_MOAMR27 = 0x3FFFFFFF------------------------------------
1697   1      
1698   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO27 acceptance mask register
1699   1      
1700   1        //  CAN Address pointing to the CAN_MOIPR27
1701   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1702   1      
1703   1        ///  - use message pending register 0 bit position 27
1704   1      
1705   1        //--------------MOIPR27 = 0x00001B00---------------------------------------
1706   1      
1707   1          CAN_vWriteAMData(0x00001B00); // load MO27 interrupt pointer register
1708   1      
1709   1        //  CAN Address pointing to the CAN_MOFGPR27
1710   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1711   1      
1712   1      
1713   1        //--------------MOFGPR27 = 0x00000000---------------------------------------
1714   1      
1715   1          CAN_vWriteAMData(0x00000000); // load MO27 FIFO/gateway pointer register
1716   1      
1717   1        //  CAN Address pointing to the CAN_MOFCR27
1718   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1719   1      
1720   1        ///  - this object is a STANDARD MESSAGE OBJECT
1721   1        ///  - 8 valid data bytes
1722   1      
1723   1        //--------------MOFCR27 = 0x08000000---------------------------------------
1724   1      
1725   1          CAN_vWriteAMData(0x08000000); // load MO27  function control register
1726   1      
1727   1        ///  -----------------------------------------------------------------------
1728   1        ///  Configuration of Message Object 28:
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 29  

1729   1        ///  -----------------------------------------------------------------------
1730   1        ///  - message object 28 is valid
1731   1        ///  - message object is used as transmit object
1732   1        ///  - this message object is assigned to list 2 (node 1)
1733   1      
1734   1        //--------------MOCTR28 = 0x0EA80000---------------------------------------
1735   1      
1736   1          CAN_vWriteCANAddress(CAN_MOCTR28); // Addressing MO28 control register
1737   1      
1738   1          CAN_vWriteAMData(0x0EA80000); // load MO28 control register
1739   1      
1740   1        //  CAN Address pointing to the CAN_MOAR28
1741   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1742   1      
1743   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1744   1        ///    order (like class 1)
1745   1        ///  - standard 11-bit identifier
1746   1        ///  - identifier 11-bit:      0x754
1747   1      
1748   1        //--------------MOAR28 = 0xDD500000---------------------------------------
1749   1      
1750   1          CAN_vWriteAMData(0xDD500000); // load MO28 arbitration register
1751   1      
1752   1        //  CAN Address pointing to the CAN_MODATAH28
1753   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1754   1      
1755   1      
1756   1        //--------------MODATAH28 = 0x00000000---------------------------------------
1757   1      
1758   1          CAN_vWriteAMData(0x00000000); // load MO28 data register high
1759   1      
1760   1        //  CAN Address pointing to the CAN_MODATAL28
1761   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1762   1      
1763   1        //--------------MODATAL28 = 0x00000000---------------------------------------
1764   1      
1765   1          CAN_vWriteAMData(0x00000000); // load MO28 data register low
1766   1      
1767   1        //  CAN Address pointing to the CAN_MOAMR28
1768   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1769   1      
1770   1        ///  - only accept receive frames with matching IDE bit
1771   1        ///  - acceptance mask 11-bit: 0x7FF
1772   1      
1773   1        //--------------CAN_MOAMR28 = 0x3FFFFFFF------------------------------------
1774   1      
1775   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO28 acceptance mask register
1776   1      
1777   1        //  CAN Address pointing to the CAN_MOIPR28
1778   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1779   1      
1780   1        ///  - use message pending register 0 bit position 28
1781   1      
1782   1        //--------------MOIPR28 = 0x00001C00---------------------------------------
1783   1      
1784   1          CAN_vWriteAMData(0x00001C00); // load MO28 interrupt pointer register
1785   1      
1786   1        //  CAN Address pointing to the CAN_MOFGPR28
1787   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1788   1      
1789   1      
1790   1        //--------------MOFGPR28 = 0x00000000---------------------------------------
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 30  

1791   1      
1792   1          CAN_vWriteAMData(0x00000000); // load MO28 FIFO/gateway pointer register
1793   1      
1794   1        //  CAN Address pointing to the CAN_MOFCR28
1795   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1796   1      
1797   1        ///  - this object is a STANDARD MESSAGE OBJECT
1798   1        ///  - 8 valid data bytes
1799   1      
1800   1        //--------------MOFCR28 = 0x08000000---------------------------------------
1801   1      
1802   1          CAN_vWriteAMData(0x08000000); // load MO28  function control register
1803   1      
1804   1        ///  -----------------------------------------------------------------------
1805   1        ///  Configuration of Message Object 29:
1806   1        ///  -----------------------------------------------------------------------
1807   1        ///  - message object 29 is valid
1808   1        ///  - message object is used as transmit object
1809   1        ///  - this message object is assigned to list 2 (node 1)
1810   1      
1811   1        //--------------MOCTR29 = 0x0EA80000---------------------------------------
1812   1      
1813   1          CAN_vWriteCANAddress(CAN_MOCTR29); // Addressing MO29 control register
1814   1      
1815   1          CAN_vWriteAMData(0x0EA80000); // load MO29 control register
1816   1      
1817   1        //  CAN Address pointing to the CAN_MOAR29
1818   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1819   1      
1820   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1821   1        ///    order (like class 1)
1822   1        ///  - standard 11-bit identifier
1823   1        ///  - identifier 11-bit:      0x755
1824   1      
1825   1        //--------------MOAR29 = 0xDD540000---------------------------------------
1826   1      
1827   1          CAN_vWriteAMData(0xDD540000); // load MO29 arbitration register
1828   1      
1829   1        //  CAN Address pointing to the CAN_MODATAH29
1830   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1831   1      
1832   1      
1833   1        //--------------MODATAH29 = 0x00000000---------------------------------------
1834   1      
1835   1          CAN_vWriteAMData(0x00000000); // load MO29 data register high
1836   1      
1837   1        //  CAN Address pointing to the CAN_MODATAL29
1838   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1839   1      
1840   1        //--------------MODATAL29 = 0x00000000---------------------------------------
1841   1      
1842   1          CAN_vWriteAMData(0x00000000); // load MO29 data register low
1843   1      
1844   1        //  CAN Address pointing to the CAN_MOAMR29
1845   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1846   1      
1847   1        ///  - only accept receive frames with matching IDE bit
1848   1        ///  - acceptance mask 11-bit: 0x7FF
1849   1      
1850   1        //--------------CAN_MOAMR29 = 0x3FFFFFFF------------------------------------
1851   1      
1852   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO29 acceptance mask register
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 31  

1853   1      
1854   1        //  CAN Address pointing to the CAN_MOIPR29
1855   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1856   1      
1857   1        ///  - use message pending register 0 bit position 29
1858   1      
1859   1        //--------------MOIPR29 = 0x00001D00---------------------------------------
1860   1      
1861   1          CAN_vWriteAMData(0x00001D00); // load MO29 interrupt pointer register
1862   1      
1863   1        //  CAN Address pointing to the CAN_MOFGPR29
1864   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1865   1      
1866   1      
1867   1        //--------------MOFGPR29 = 0x00000000---------------------------------------
1868   1      
1869   1          CAN_vWriteAMData(0x00000000); // load MO29 FIFO/gateway pointer register
1870   1      
1871   1        //  CAN Address pointing to the CAN_MOFCR29
1872   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1873   1      
1874   1        ///  - this object is a STANDARD MESSAGE OBJECT
1875   1        ///  - 8 valid data bytes
1876   1      
1877   1        //--------------MOFCR29 = 0x08000000---------------------------------------
1878   1      
1879   1          CAN_vWriteAMData(0x08000000); // load MO29  function control register
1880   1      
1881   1        ///  -----------------------------------------------------------------------
1882   1        ///  Configuration of Message Object 30:
1883   1        ///  -----------------------------------------------------------------------
1884   1        ///  - message object 30 is valid
1885   1        ///  - message object is used as transmit object
1886   1        ///  - this message object is assigned to list 2 (node 1)
1887   1      
1888   1        //--------------MOCTR30 = 0x0EA80000---------------------------------------
1889   1      
1890   1          CAN_vWriteCANAddress(CAN_MOCTR30); // Addressing MO30 control register
1891   1      
1892   1          CAN_vWriteAMData(0x0EA80000); // load MO30 control register
1893   1      
1894   1        //  CAN Address pointing to the CAN_MOAR30
1895   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1896   1      
1897   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1898   1        ///    order (like class 1)
1899   1        ///  - standard 11-bit identifier
1900   1        ///  - identifier 11-bit:      0x756
1901   1      
1902   1        //--------------MOAR30 = 0xDD580000---------------------------------------
1903   1      
1904   1          CAN_vWriteAMData(0xDD580000); // load MO30 arbitration register
1905   1      
1906   1        //  CAN Address pointing to the CAN_MODATAH30
1907   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1908   1      
1909   1      
1910   1        //--------------MODATAH30 = 0x00000000---------------------------------------
1911   1      
1912   1          CAN_vWriteAMData(0x00000000); // load MO30 data register high
1913   1      
1914   1        //  CAN Address pointing to the CAN_MODATAL30
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 32  

1915   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1916   1      
1917   1        //--------------MODATAL30 = 0x00000000---------------------------------------
1918   1      
1919   1          CAN_vWriteAMData(0x00000000); // load MO30 data register low
1920   1      
1921   1        //  CAN Address pointing to the CAN_MOAMR30
1922   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1923   1      
1924   1        ///  - only accept receive frames with matching IDE bit
1925   1        ///  - acceptance mask 11-bit: 0x7FF
1926   1      
1927   1        //--------------CAN_MOAMR30 = 0x3FFFFFFF------------------------------------
1928   1      
1929   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO30 acceptance mask register
1930   1      
1931   1        //  CAN Address pointing to the CAN_MOIPR30
1932   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1933   1      
1934   1        ///  - use message pending register 0 bit position 30
1935   1      
1936   1        //--------------MOIPR30 = 0x00001E00---------------------------------------
1937   1      
1938   1          CAN_vWriteAMData(0x00001E00); // load MO30 interrupt pointer register
1939   1      
1940   1        //  CAN Address pointing to the CAN_MOFGPR30
1941   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1942   1      
1943   1      
1944   1        //--------------MOFGPR30 = 0x00000000---------------------------------------
1945   1      
1946   1          CAN_vWriteAMData(0x00000000); // load MO30 FIFO/gateway pointer register
1947   1      
1948   1        //  CAN Address pointing to the CAN_MOFCR30
1949   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1950   1      
1951   1        ///  - this object is a STANDARD MESSAGE OBJECT
1952   1        ///  - 8 valid data bytes
1953   1      
1954   1        //--------------MOFCR30 = 0x08000000---------------------------------------
1955   1      
1956   1          CAN_vWriteAMData(0x08000000); // load MO30  function control register
1957   1      
1958   1        ///  -----------------------------------------------------------------------
1959   1        ///  Configuration of Message Object 31:
1960   1        ///  -----------------------------------------------------------------------
1961   1        ///  - message object 31 is valid
1962   1        ///  - message object is used as transmit object
1963   1        ///  - this message object is assigned to list 2 (node 1)
1964   1      
1965   1        //--------------MOCTR31 = 0x0EA80000---------------------------------------
1966   1      
1967   1          CAN_vWriteCANAddress(CAN_MOCTR31); // Addressing MO31 control register
1968   1      
1969   1          CAN_vWriteAMData(0x0EA80000); // load MO31 control register
1970   1      
1971   1        //  CAN Address pointing to the CAN_MOAR31
1972   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1973   1      
1974   1        ///  - priority class 3; transmit acceptance filtering is based on the list 
1975   1        ///    order (like class 1)
1976   1        ///  - standard 11-bit identifier
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 33  

1977   1        ///  - identifier 11-bit:      0x757
1978   1      
1979   1        //--------------MOAR31 = 0xDD5C0000---------------------------------------
1980   1      
1981   1          CAN_vWriteAMData(0xDD5C0000); // load MO31 arbitration register
1982   1      
1983   1        //  CAN Address pointing to the CAN_MODATAH31
1984   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1985   1      
1986   1      
1987   1        //--------------MODATAH31 = 0x00000000---------------------------------------
1988   1      
1989   1          CAN_vWriteAMData(0x00000000); // load MO31 data register high
1990   1      
1991   1        //  CAN Address pointing to the CAN_MODATAL31
1992   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
1993   1      
1994   1        //--------------MODATAL31 = 0x00000000---------------------------------------
1995   1      
1996   1          CAN_vWriteAMData(0x00000000); // load MO31 data register low
1997   1      
1998   1        //  CAN Address pointing to the CAN_MOAMR31
1999   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
2000   1      
2001   1        ///  - only accept receive frames with matching IDE bit
2002   1        ///  - acceptance mask 11-bit: 0x7FF
2003   1      
2004   1        //--------------CAN_MOAMR31 = 0x3FFFFFFF------------------------------------
2005   1      
2006   1          CAN_vWriteAMData(0x3FFFFFFF); // load MO31 acceptance mask register
2007   1      
2008   1        //  CAN Address pointing to the CAN_MOIPR31
2009   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
2010   1      
2011   1        ///  - use message pending register 0 bit position 31
2012   1      
2013   1        //--------------MOIPR31 = 0x00001F00---------------------------------------
2014   1      
2015   1          CAN_vWriteAMData(0x00001F00); // load MO31 interrupt pointer register
2016   1      
2017   1        //  CAN Address pointing to the CAN_MOFGPR31
2018   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
2019   1      
2020   1      
2021   1        //--------------MOFGPR31 = 0x00000000---------------------------------------
2022   1      
2023   1          CAN_vWriteAMData(0x00000000); // load MO31 FIFO/gateway pointer register
2024   1      
2025   1        //  CAN Address pointing to the CAN_MOFCR31
2026   1          CAN_ADCON = ADR_DEC;         // Auto Decrement the current address(-1)
2027   1      
2028   1        ///  - this object is a STANDARD MESSAGE OBJECT
2029   1        ///  - 8 valid data bytes
2030   1      
2031   1        //--------------MOFCR31 = 0x08000000---------------------------------------
2032   1      
2033   1          CAN_vWriteAMData(0x08000000); // load MO31  function control register
2034   1      
2035   1      
2036   1        ///  -----------------------------------------------------------------------
2037   1        ///  Configuration of the Interrupts:
2038   1        ///  -----------------------------------------------------------------------
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 34  

2039   1        ///  - CAN interrupt node 0 is disabled
2040   1        ///  - CAN interrupt node 1 is disabled
2041   1        ///  - CAN interrupt node 2 is disabled
2042   1        ///  - CAN interrupt node 3 is disabled
2043   1        ///  - CAN interrupt node 4 is enabled
2044   1        ///  - CAN interrupt node 5 is disabled
2045   1        ///  - CAN interrupt node 6 is disabled
2046   1        ///  - CAN interrupt node 7 is disabled
2047   1      
2048   1      
2049   1        ///  - MultiCAN Nodex Interrupt enable bit is set in SHINT_vInit() function
2050   1      
2051   1        //   -----------------------------------------------------------------------
2052   1        //   Start the CAN Nodes:
2053   1        //   -----------------------------------------------------------------------
2054   1      
2055   1      
2056   1        ///  - -----------CAN_NCR1--------------------------------------------------------
2057   1      
2058   1          CAN_vWriteCANAddress(CAN_NCR1); // Addressing CAN_NCR1
2059   1          CAN_vReadEN();               // Read Mode is Enabled
2060   1          CAN_DATA0  &= ~0x41;         // reset INIT and CCE
2061   1          CAN_vWriteEN(D0_VALID);      // Data0 is Valid for transmission and Write 
2062   1                                       // is Enabled
2063   1      
2064   1      
2065   1        // USER CODE BEGIN (Init,3)
2066   1      
2067   1        // USER CODE END
2068   1      
2069   1      } //  End of function CAN_vInit
2070          
2071          //****************************************************************************
2072          // @Function      void CAN_vWriteAMData(ulong ulValue) 
2073          //
2074          //----------------------------------------------------------------------------
2075          // @Description   This function writes 32-bit Data to CAN Data Register's 
2076          //                0-3respectively. 
2077          //                Note:
2078          //                Write Process :
2079          //                ->Write the address of the MultiCAN kernel register to the 
2080          //                CAN_ADL and CAN_ADH registers.
2081          //                use macro : CAN_vWriteCANAddress. 
2082          //                ->Write the data to the 
2083          //                CAN_DATA0/CAN_DATA1/CAN_DATA2/CAN_DATA3 registers.
2084          //                ->Write the register CAN_ADCON, including setting the valid 
2085          //                bit of the data registers and setting register bit RWEN to 
2086          //                1.
2087          //                ->The valid data will be written to the MultiCAN kernel 
2088          //                only once. Register bit BSY will become 1.
2089          //                ->When Register bit BSY becomes 0, the transmission is 
2090          //                finished.
2091          //
2092          //----------------------------------------------------------------------------
2093          // @Returnvalue   None
2094          //
2095          //----------------------------------------------------------------------------
2096          // @Parameters    ulValue: 
2097          //                32-bit Data
2098          //
2099          //----------------------------------------------------------------------------
2100          // @Date          12.08.2009
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 35  

2101          //
2102          //****************************************************************************
2103          
2104          // USER CODE BEGIN (WriteAMData,1)
2105          
2106          // USER CODE END
2107          
2108          void CAN_vWriteAMData(ulong ulValue)
2109          {
2110   1        un_32bit ulData;
2111   1        ulData.ulVal = ulValue;
2112   1      
2113   1          CAN_DATA0 = ulData.ubDB[3]; // load CAN Data Register 0
2114   1          CAN_DATA1 = ulData.ubDB[2]; // load CAN Data Register 1
2115   1          CAN_DATA2 = ulData.ubDB[1]; // load CAN Data Register 2
2116   1          CAN_DATA3 = ulData.ubDB[0]; // load CAN Data Register 3
2117   1              CAN_vWriteEN(ALL_DATA_VALID); // Writemode is Enabled
2118   1      } //  End of function CAN_vWriteAMData
2119          
2120          //****************************************************************************
2121          // @Function      void CAN_vSetListCommand(ulong ulVal) 
2122          //
2123          //----------------------------------------------------------------------------
2124          // @Description   This function write's 32-bit Data to CAN_PANCTR Register.
2125          //                
2126          //
2127          //----------------------------------------------------------------------------
2128          // @Returnvalue   None
2129          //
2130          //----------------------------------------------------------------------------
2131          // @Parameters    ulVal: 
2132          //                32-bit Data
2133          //
2134          //----------------------------------------------------------------------------
2135          // @Date          12.08.2009
2136          //
2137          //****************************************************************************
2138          
2139          // USER CODE BEGIN (SetListCommand,1)
2140          
2141          // USER CODE END
2142          
2143          void CAN_vSetListCommand(ulong ulVal)
2144          {
2145   1          CAN_vWriteAMData(ulVal);  // - load Panel Control Register
2146   1          CAN_DATA1 = CAN_PANCTR_BUSY;
2147   1          while(CAN_DATA1 & CAN_PANCTR_BUSY){ // wait until Panel has finished the 
2148   2                                              // initialisation
2149   2            CAN_ADCON &= ~0x01;       
2150   2            }                         
2151   1      } //  End of function CAN_vSetListCommand
2152          
2153          //****************************************************************************
2154          // @Function      void CAN_vTransmit(ubyte ubObjNr) 
2155          //
2156          //----------------------------------------------------------------------------
2157          // @Description   This function triggers the CAN controller to send the 
2158          //                selected message.
2159          //                If the selected message object is a TRANSMIT OBJECT then 
2160          //                this function triggers the sending of a data frame. If 
2161          //                however the selected message object is a RECEIVE OBJECT 
2162          //                this function triggers the sending of a remote frame.
C51 COMPILER V8.04b   CAN                                                                  03/17/2010 10:20:45 PAGE 36  

2163          //
2164          //----------------------------------------------------------------------------
2165          // @Returnvalue   None
2166          //
2167          //----------------------------------------------------------------------------
2168          // @Parameters    ubObjNr: 
2169          //                Number of the message object (0-31)
2170          //
2171          //----------------------------------------------------------------------------
2172          // @Date          12.08.2009
2173          //
2174          //****************************************************************************
2175          
2176          // USER CODE BEGIN (Transmit,1)
2177          
2178          // USER CODE END
2179          
2180          void CAN_vTransmit(ubyte ubObjNr)
2181          {
2182   1          CAN_pushAMRegs();    //   PUSH the CAN Access Mediator Register
2183   1      
2184   1          CAN_vWriteCANAddress(CAN_MOCTR(ubObjNr));  //Addressing CAN_MOCTR register
2185   1          CAN_vWriteCANData(0x07200000);      // set TXRQ,TXEN0,TXEN1,MSGVAL
2186   1      
2187   1          CAN_popAMRegs();    //   POP the CAN Access Mediator Register
2188   1      
2189   1      } //  End of function CAN_vTransmit
2190          
2191          
2192          // USER CODE BEGIN (CAN_General,10)
2193          
2194          // USER CODE END
2195          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3105    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
