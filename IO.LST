C51 COMPILER V8.04b   IO                                                                   03/17/2010 10:20:44 PAGE 1   


C51 COMPILER V8.04b, COMPILATION OF MODULE IO
OBJECT MODULE PLACED IN IO.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IO.C LARGE OBJECTADVANCED OPTIMIZE(9,SPEED) BROWSE ORDER DEFINE(SLAVE_BOARD
                    -S,PRINT_ERROR,PRINT_WARNING,PRINT,PANASONIC_12_CELLS) DEBUG

line level    source

   1          //****************************************************************************
   2          // @Module        GPIO
   3          // @Filename      IO.C
   4          // @Project       BM_NewSlave.dav
   5          //----------------------------------------------------------------------------
   6          // @Controller    Infineon XC886CLM-8FF
   7          //
   8          // @Compiler      Keil
   9          //
  10          // @Codegenerator 1.6
  11          //
  12          // @Description:  This file contains functions that use the IO module.
  13          //
  14          //----------------------------------------------------------------------------
  15          // @Date          12.08.2009 19:23:24
  16          //
  17          //****************************************************************************
  18          
  19          // USER CODE BEGIN (IO_General,1)
  20          
  21          // USER CODE END
  22          
  23          
  24          
  25          //****************************************************************************
  26          // @Project Includes
  27          //****************************************************************************
  28          
  29          #include "MAIN.H"
  30          
  31          // USER CODE BEGIN (IO_General,2)
  32          
  33          // USER CODE END
  34          
  35          
  36          //****************************************************************************
  37          // @Macros
  38          //****************************************************************************
  39          
  40          // USER CODE BEGIN (IO_General,3)
  41          
  42          // USER CODE END
  43          
  44          
  45          //****************************************************************************
  46          // @Defines
  47          //****************************************************************************
  48          
  49          // USER CODE BEGIN (IO_General,4)
  50          
  51          // USER CODE END
  52          
  53          
  54          //****************************************************************************
C51 COMPILER V8.04b   IO                                                                   03/17/2010 10:20:44 PAGE 2   

  55          // @Typedefs
  56          //****************************************************************************
  57          
  58          // USER CODE BEGIN (IO_General,5)
  59          
  60          // USER CODE END
  61          
  62          
  63          //****************************************************************************
  64          // @Imported Global Variables
  65          //****************************************************************************
  66          
  67          // USER CODE BEGIN (IO_General,6)
  68          
  69          // USER CODE END
  70          
  71          
  72          //****************************************************************************
  73          // @Global Variables
  74          //****************************************************************************
  75          
  76          // USER CODE BEGIN (IO_General,7)
  77          
  78          // USER CODE END
  79          
  80          
  81          //****************************************************************************
  82          // @External Prototypes
  83          //****************************************************************************
  84          
  85          // USER CODE BEGIN (IO_General,8)
  86          
  87          // USER CODE END
  88          
  89          
  90          //****************************************************************************
  91          // @Prototypes Of Local Functions
  92          //****************************************************************************
  93          
  94          // USER CODE BEGIN (IO_General,9)
  95          
  96          // USER CODE END
  97          
  98          
  99          //****************************************************************************
 100          // @Function      void IO_vInit(void) 
 101          //
 102          //----------------------------------------------------------------------------
 103          // @Description   This is the initialization function of the IO function 
 104          //                library. It is assumed that the SFRs used by this library 
 105          //                are in their reset state. 
 106          //
 107          //----------------------------------------------------------------------------
 108          // @Returnvalue   None
 109          //
 110          //----------------------------------------------------------------------------
 111          // @Parameters    None
 112          //
 113          //----------------------------------------------------------------------------
 114          // @Date          12.08.2009
 115          //
 116          //****************************************************************************
C51 COMPILER V8.04b   IO                                                                   03/17/2010 10:20:44 PAGE 3   

 117          
 118          // USER CODE BEGIN (IO_Init,1)
 119          
 120          // USER CODE END
 121          
 122          void IO_vInit(void)
 123          {
 124   1        // USER CODE BEGIN (IO_Init,2)
 125   1      
 126   1        // USER CODE END
 127   1      
 128   1      
 129   1        ///  ***********************************************************************
 130   1        ///  Note : All peripheral related IO configurations are done in the 
 131   1        ///  respective peripheral modules (alternate functions selection)
 132   1        ///  
 133   1        ///  If no pins are selected DAvE assumes that registers are in default 
 134   1        ///  settings
 135   1        ///  ***********************************************************************
 136   1      
 137   1        ///  -----------------------------------------------------------------------
 138   1        ///  Configuration of Port P0:
 139   1        ///  -----------------------------------------------------------------------
 140   1        ///  P0.3:
 141   1        ///  - is used as general purpose output
 142   1        ///  - push/pull output is selected
 143   1        ///  - the pin status is low level
 144   1        ///  - pull device is disabled (tristate) 
 145   1        ///  P0.4:
 146   1        ///  - is used as general purpose output
 147   1        ///  - push/pull output is selected
 148   1        ///  - the pin status is low level
 149   1        ///  - pull device is disabled (tristate) 
 150   1        ///  P0.5:
 151   1        ///  - is used as general purpose output
 152   1        ///  - push/pull output is selected
 153   1        ///  - the pin status is low level
 154   1        ///  - pull device is disabled (tristate) 
 155   1        ///  P0.7:
 156   1        ///  - is used as general purpose output
 157   1        ///  - push/pull output is selected
 158   1        ///  - the pin status is low level
 159   1        ///  - pull device is disabled (tristate) 
 160   1      
 161   1        SFR_PAGE(_pp1, noSST);         // switch to page 1
 162   1        P0_PUDEN      =  0x44;         // load pullup/pulldown enable register
 163   1      
 164   1        SFR_PAGE(_pp0, noSST);         // switch to page 0
 165   1        P0_DIR        =  0xB8;         // load direction register
 166   1      
 167   1        ///  -----------------------------------------------------------------------
 168   1        ///  Configuration of Port P1:
 169   1        ///  -----------------------------------------------------------------------
 170   1        ///  P1.0:
 171   1        ///  - is used as alternate input for the UART Receive Input
 172   1        ///  - pull-up device is assigned
 173   1        ///  P1.1:
 174   1        ///  - is used as alternate output for the UART Transmit Output
 175   1        ///  - push/pull output is selected
 176   1        ///  - pull-up device is assigned
 177   1        ///  P1.2:
 178   1        ///  - is used as general purpose output
C51 COMPILER V8.04b   IO                                                                   03/17/2010 10:20:44 PAGE 4   

 179   1        ///  - push/pull output is selected
 180   1        ///  - the pin status is low level
 181   1        ///  - pull device is disabled (tristate) 
 182   1        ///  P1.3:
 183   1        ///  - is used as general purpose output
 184   1        ///  - push/pull output is selected
 185   1        ///  - the pin status is low level
 186   1        ///  - pull device is disabled (tristate) 
 187   1        ///  P1.4:
 188   1        ///  - is used as general purpose output
 189   1        ///  - push/pull output is selected
 190   1        ///  - the pin status is low level
 191   1        ///  - pull device is disabled (tristate) 
 192   1        ///  P1.5:
 193   1        ///  - is used as general purpose output
 194   1        ///  - push/pull output is selected
 195   1        ///  - the pin status is low level
 196   1        ///  - pull device is disabled (tristate) 
 197   1        ///  P1.6:
 198   1        ///  - is used as general purpose output
 199   1        ///  - push/pull output is selected
 200   1        ///  - the pin status is low level
 201   1        ///  - pull device is disabled (tristate) 
 202   1        ///  P1.7:
 203   1        ///  - is used as general purpose output
 204   1        ///  - push/pull output is selected
 205   1        ///  - the pin status is low level
 206   1        ///  - pull device is disabled (tristate) 
 207   1      
 208   1        SFR_PAGE(_pp1, noSST);         // switch to page 1
 209   1        P1_PUDEN      =  0x03;         // load pullup/pulldown enable register
 210   1      
 211   1        SFR_PAGE(_pp0, noSST);         // switch to page 0
 212   1        P1_DIR        =  0xFC;         // load direction register
 213   1      
 214   1        ///  -----------------------------------------------------------------------
 215   1        ///  Configuration of Port P2:
 216   1        ///  -----------------------------------------------------------------------
 217   1        ///  P2.0:
 218   1        ///  - is used as alternate input for the Analog Input 0
 219   1        ///  - pull device is disabled (tristate) 
 220   1        ///  P2.1:
 221   1        ///  - is used as alternate input for the Analog Input 1
 222   1        ///  - pull device is disabled (tristate) 
 223   1        ///  P2.2:
 224   1        ///  - is used as alternate input for the Analog Input 2
 225   1        ///  - pull device is disabled (tristate) 
 226   1        ///  P2.3:
 227   1        ///  - is used as alternate input for the Analog Input 3
 228   1        ///  - pull device is disabled (tristate) 
 229   1        ///  P2.4:
 230   1        ///  - is used as alternate input for the Analog Input 4
 231   1        ///  - pull device is disabled (tristate) 
 232   1        ///  P2.5:
 233   1        ///  - is used as alternate input for the Analog Input 5
 234   1        ///  - pull device is disabled (tristate) 
 235   1        ///  P2.6:
 236   1        ///  - is used as alternate input for the Analog Input 6
 237   1        ///  - pull device is disabled (tristate) 
 238   1        ///  P2.7:
 239   1        ///  - is used as alternate input for the Analog Input 7
 240   1        ///  - pull device is disabled (tristate) 
C51 COMPILER V8.04b   IO                                                                   03/17/2010 10:20:44 PAGE 5   

 241   1      
 242   1      
 243   1        ///  -----------------------------------------------------------------------
 244   1        ///  Configuration of Port P3:
 245   1        ///  -----------------------------------------------------------------------
 246   1        ///  P3.0:
 247   1        ///  - is used as general purpose output
 248   1        ///  - push/pull output is selected
 249   1        ///  - the pin status is low level
 250   1        ///  - pull device is disabled (tristate) 
 251   1        ///  P3.1:
 252   1        ///  - is used as general purpose output
 253   1        ///  - push/pull output is selected
 254   1        ///  - the pin status is low level
 255   1        ///  - pull device is disabled (tristate) 
 256   1        ///  P3.2:
 257   1        ///  - is used as alternate input for the MCAN Node 1 Receiver Input
 258   1        ///  - pull device is disabled (tristate) 
 259   1        ///  P3.3:
 260   1        ///  - is used as alternate output for the MCAN Node 1 Transmitter Output
 261   1        ///  - push/pull output is selected
 262   1        ///  - pull device is disabled (tristate) 
 263   1        ///  P3.4:
 264   1        ///  - is used as general purpose output
 265   1        ///  - push/pull output is selected
 266   1        ///  - the pin status is low level
 267   1        ///  - pull device is disabled (tristate) 
 268   1        ///  P3.5:
 269   1        ///  - is used as general purpose output
 270   1        ///  - push/pull output is selected
 271   1        ///  - the pin status is low level
 272   1        ///  - pull device is disabled (tristate) 
 273   1        ///  P3.6:
 274   1        ///  - is used as general purpose output
 275   1        ///  - push/pull output is selected
 276   1        ///  - the pin status is low level
 277   1        ///  - pull device is disabled (tristate) 
 278   1        ///  P3.7:
 279   1        ///  - is used as general purpose output
 280   1        ///  - push/pull output is selected
 281   1        ///  - the pin status is low level
 282   1        ///  - pull device is disabled (tristate) 
 283   1      
 284   1      
 285   1        P3_DIR        =  0xF3;         // load direction register
 286   1      
 287   1        ///  -----------------------------------------------------------------------
 288   1        ///  Configuration of Port P4:
 289   1        ///  -----------------------------------------------------------------------
 290   1        ///  P4.0:
 291   1        ///  - is used as general purpose output
 292   1        ///  - push/pull output is selected
 293   1        ///  - the pin status is low level
 294   1        ///  - pull device is disabled (tristate) 
 295   1        ///  P4.1:
 296   1        ///  - is used as general purpose output
 297   1        ///  - push/pull output is selected
 298   1        ///  - the pin status is low level
 299   1        ///  - pull device is disabled (tristate) 
 300   1        ///  P4.3:
 301   1        ///  - is used as general purpose output
 302   1        ///  - push/pull output is selected
C51 COMPILER V8.04b   IO                                                                   03/17/2010 10:20:44 PAGE 6   

 303   1        ///  - the pin status is low level
 304   1        ///  - pull device is disabled (tristate) 
 305   1      
 306   1      
 307   1        P4_DIR        =  0x0B;         // load direction register
 308   1      
 309   1      
 310   1        // USER CODE BEGIN (IO_Init,3)
 311   1      
 312   1        // USER CODE END
 313   1      
 314   1      } //  End of function IO_vInit
 315          
 316          
 317          
 318          
 319          // USER CODE BEGIN (IO_General,10)
 320          
 321          // USER CODE END
 322          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     30    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
